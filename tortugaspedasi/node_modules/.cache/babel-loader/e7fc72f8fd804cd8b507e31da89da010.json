{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\benja\\\\Desktop\\\\Fullstack Bootcamp\\\\projects\\\\Tortuga Pedasi\\\\tortugaspedasi\\\\tortugaspedasi\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\benja\\\\Desktop\\\\Fullstack Bootcamp\\\\projects\\\\Tortuga Pedasi\\\\tortugaspedasi\\\\tortugaspedasi\\\\src\\\\Components\\\\Form\\\\ObservationInput.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\n\nconst axios = require('axios');\n\nlet beaches = [{\n  name: \"Playa El Toro\",\n  latitude: 7.530178,\n  longitude: -80.003034\n}, {\n  name: \"Playa El Arenal\",\n  latitude: 7.559493,\n  longitude: -80.019275\n}, {\n  name: \"Playa Lagarto\",\n  latitude: 7.506391,\n  longitude: -79.999284\n}];\n\nclass ObservationInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLocation = async event => {\n      let currentBeach = event.target.value ? beaches.find(b => b.name === event.target.value) : {\n        latitude: \"\",\n        longitude: \"\"\n      };\n\n      let locationLatitude = _objectSpread({}, this.state.locationLatitude);\n\n      let locationLongitude = _objectSpread({}, this.state.locationLongitude);\n\n      locationLatitude = currentBeach.latitude;\n      locationLongitude = currentBeach.longitude;\n      await this.setState({\n        locationLatitude,\n        locationLongitude\n      });\n    };\n\n    this.saveCoordinates = () => {\n      let currentBeach = event.target.value ? beaches.find(b => b.name === event.target.value) : {\n        latitude: \"\",\n        longitude: \"\"\n      };\n\n      let lat = _objectSpread({}, this.state.locationLatitude);\n\n      let long = _objectSpread({}, this.state.locationLongitude);\n\n      lat = currentBeach.latitude;\n      long = currentBeach.longitude;\n      axios.get(\"https://localhost:7777/solunar/\".concat(lat, \", \").concat(long, \",\").concat(date, \",\"));\n    };\n\n    this.handleInput = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      }, () => console.log(this.state));\n    };\n\n    this.addShift = () => {\n      this.props.addShift(this.state.time, this.state.location, this.state.comments);\n    };\n\n    this.componentDidMount = () => {\n      this.setState({\n        date: new Date()\n      });\n    };\n\n    this.state = {\n      date: \"\",\n      time: \"\",\n      // placeholder but editable\n      locationLatitude: \"\",\n      // set-up by beach selection\n      locationLongitude: \"\",\n      // set-up by beach selection\n      comments: \"\" //free input\n\n    };\n  }\n\n  // getDate2 = () => {\n  //     let currentDate = new Date();\n  //     let date = currentDate.getDate();\n  //     let month = currentDate.getMonth();\n  //     let year = currentDate.getFullYear();\n  //     let monthDateYear = (month + 1) + \"/\" + date + \"/\" + year;\n  //     return monthDateYear\n  // }\n  // getDate = () => {\n  //     let today = new Date().toLocaleDateString(undefined, {\n  //         day: '2-digit',\n  //         month: '2-digit',\n  //         year: 'numeric'\n  //     })\n  //     return today\n  // }\n  render() {\n    let date = new Date();\n    return React.createElement(\"div\", {\n      className: \"observation-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Observation\"), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Date: \", React.createElement(\"input\", {\n      type: \"date\",\n      name: \"date\",\n      onChange: this.handleInput,\n      value: this.getdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Time: \", React.createElement(\"input\", {\n      type: \"time\",\n      name: \"time\",\n      onChange: this.handleInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"observation-component\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Location:\"), React.createElement(\"select\", {\n      onChangeCapture: this.handleLocation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Select\"), React.createElement(\"option\", {\n      value: \"Playa El Arenal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Playa El Arenal\"), React.createElement(\"option\", {\n      value: \"Playa El Toro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Playa El Toro\"), React.createElement(\"option\", {\n      value: \"Playa Lagarto\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Playa Lagarto\")))), React.createElement(\"div\", {\n      className: \"observation-component\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Comments:\", React.createElement(\"input\", {\n      className: \"searchInput-observationInput\",\n      name: \"comments\",\n      onChange: this.handleInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default ObservationInput;","map":{"version":3,"sources":["C:/Users/benja/Desktop/Fullstack Bootcamp/projects/Tortuga Pedasi/tortugaspedasi/tortugaspedasi/src/Components/Form/ObservationInput.js"],"names":["React","Component","axios","require","beaches","name","latitude","longitude","ObservationInput","constructor","props","handleLocation","event","currentBeach","target","value","find","b","locationLatitude","state","locationLongitude","setState","saveCoordinates","lat","long","get","date","handleInput","console","log","addShift","time","location","comments","componentDidMount","Date","render","getdate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nconst axios = require('axios')\r\n\r\n\r\nlet beaches = [\r\n    {\r\n        name: \"Playa El Toro\",\r\n        latitude: 7.530178,\r\n        longitude: -80.003034\r\n    },\r\n    {\r\n        name: \"Playa El Arenal\",\r\n        latitude: 7.559493,\r\n        longitude: -80.019275\r\n    },\r\n    {\r\n        name: \"Playa Lagarto\",\r\n        latitude: 7.506391,\r\n        longitude: -79.999284\r\n    }\r\n]\r\n\r\nclass ObservationInput extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            date: \"\",\r\n            time: \"\", // placeholder but editable\r\n            locationLatitude: \"\",  // set-up by beach selection\r\n            locationLongitude: \"\", // set-up by beach selection\r\n            comments: \"\", //free input\r\n\r\n        }\r\n    }\r\n    handleLocation = async (event) => {\r\n        let currentBeach = event.target.value ? beaches.find(b => b.name === event.target.value) : { latitude: \"\", longitude: \"\" }\r\n        let locationLatitude = { ...this.state.locationLatitude }\r\n        let locationLongitude = { ...this.state.locationLongitude }\r\n        locationLatitude = currentBeach.latitude\r\n        locationLongitude = currentBeach.longitude\r\n        await this.setState({ locationLatitude, locationLongitude })\r\n    }\r\n    \r\n    saveCoordinates = () => {\r\n        let currentBeach = event.target.value ? beaches.find(b => b.name === event.target.value) : { latitude: \"\", longitude: \"\" }\r\n        let lat = { ...this.state.locationLatitude }\r\n        let long = { ...this.state.locationLongitude }\r\n        lat = currentBeach.latitude\r\n        long = currentBeach.longitude \r\n        axios.get(`https://localhost:7777/solunar/${lat}, ${long},${date},`)\r\n    }\r\n\r\n    handleInput = (event) => {\r\n        this.setState({ [event.target.name]: event.target.value }, () => console.log(this.state))\r\n    }\r\n    addShift = () => {\r\n        this.props.addShift(this.state.time, this.state.location, this.state.comments)\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setState({date: new Date()})\r\n    }\r\n\r\n\r\n    \r\n    // getDate2 = () => {\r\n    //     let currentDate = new Date();\r\n    //     let date = currentDate.getDate();\r\n    //     let month = currentDate.getMonth();\r\n    //     let year = currentDate.getFullYear();\r\n    //     let monthDateYear = (month + 1) + \"/\" + date + \"/\" + year;\r\n    //     return monthDateYear\r\n    // }\r\n\r\n    // getDate = () => {\r\n    //     let today = new Date().toLocaleDateString(undefined, {\r\n    //         day: '2-digit',\r\n    //         month: '2-digit',\r\n    //         year: 'numeric'\r\n    //     })\r\n    //     return today\r\n    // }\r\n\r\n    render() {\r\n        let date = new Date()\r\n        return (\r\n            <div className=\"observation-container\">\r\n                <h2>Observation</h2>\r\n\r\n                <form >\r\n                    <div>Date: <input type=\"date\" name=\"date\" onChange={this.handleInput} value={this.getdate} ></input></div>\r\n                    <div>Time: <input type=\"time\" name=\"time\" onChange={this.handleInput}></input></div>\r\n                </form>\r\n\r\n\r\n                <div className=\"observation-component\">\r\n                    <div>\r\n                        <span>Location:</span>\r\n                        <select onChangeCapture={this.handleLocation}>\r\n                            <option value=\"\" >Select</option>\r\n                            <option value=\"Playa El Arenal\"  >Playa El Arenal</option>\r\n                            <option value=\"Playa El Toro\" >Playa El Toro</option>\r\n                            <option value=\"Playa Lagarto\" >Playa Lagarto</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"observation-component\">Comments:\r\n                <input className=\"searchInput-observationInput\"\r\n                        name=\"comments\" onChange={this.handleInput}></input>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default ObservationInput;"]},"metadata":{},"sourceType":"module"}