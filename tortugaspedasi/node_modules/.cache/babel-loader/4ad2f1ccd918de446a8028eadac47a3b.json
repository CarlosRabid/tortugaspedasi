{"ast":null,"code":"// const cacheName = 'cache-v1';\n// const precacheResources = [\n//   '/',\n//   'index.html',\n//   'styles/main.css',\n//   'images/space1.jpg',\n//   'images/space2.jpg',\n//   'images/space3.jpg'\n// ];\n// self.addEventListener('install', event => {\n//   console.log('Service worker install event!');\n//   event.waitUntil(\n//     caches.open(cacheName)\n//       .then(cache => {\n//         return cache.addAll(precacheResources);\n//       })\n//   );\n// });\n// self.addEventListener('activate', event => {\n//   console.log('Service worker activate event!');\n// });\n// self.addEventListener('fetch', event => {\n//   console.log('Fetch intercepted for:', event.request.url);\n//   event.respondWith(caches.match(event.request)\n//     .then(cachedResponse => {\n//         if (cachedResponse) {\n//           return cachedResponse;\n//         }\n//         return fetch(event.request);\n//       })\n//     );\n// });","map":{"version":3,"sources":["C:/Users/benja/Desktop/Fullstack Bootcamp/projects/Tortuga Pedasi/tortugaspedasi/tortugaspedasi/src/serviceWorker.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// const cacheName = 'cache-v1';\r\n// const precacheResources = [\r\n//   '/',\r\n//   'index.html',\r\n//   'styles/main.css',\r\n//   'images/space1.jpg',\r\n//   'images/space2.jpg',\r\n//   'images/space3.jpg'\r\n// ];\r\n\r\n// self.addEventListener('install', event => {\r\n//   console.log('Service worker install event!');\r\n//   event.waitUntil(\r\n//     caches.open(cacheName)\r\n//       .then(cache => {\r\n//         return cache.addAll(precacheResources);\r\n//       })\r\n//   );\r\n// });\r\n\r\n// self.addEventListener('activate', event => {\r\n//   console.log('Service worker activate event!');\r\n// });\r\n\r\n// self.addEventListener('fetch', event => {\r\n//   console.log('Fetch intercepted for:', event.request.url);\r\n//   event.respondWith(caches.match(event.request)\r\n//     .then(cachedResponse => {\r\n//         if (cachedResponse) {\r\n//           return cachedResponse;\r\n//         }\r\n//         return fetch(event.request);\r\n//       })\r\n//     );\r\n// });"]},"metadata":{},"sourceType":"module"}