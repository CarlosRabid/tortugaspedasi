{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\benja\\\\Desktop\\\\Fullstack Bootcamp\\\\projects\\\\Tortuga Pedasi\\\\tortugaspedasi\\\\tortugaspedasi\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\benja\\\\Desktop\\\\Fullstack Bootcamp\\\\projects\\\\Tortuga Pedasi\\\\tortugaspedasi\\\\tortugaspedasi\\\\src\\\\Components\\\\Form\\\\ShiftInput.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { withTranslation } from 'react-i18next';\nimport TextField from '@material-ui/core/TextField';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { Typography, Grid } from '@material-ui/core';\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\nimport moment from 'moment';\n\nclass ShiftInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInput = event => {\n      console.log(event);\n\n      let state = _objectSpread({}, this.state);\n\n      let date = state.date;\n      let time = state.time; // let property = \"\";\n      // let value = \"\"\n\n      if (event.target) {\n        return this.setState({\n          [event.target.id]: event.target.value\n        });\n      } else {\n        date = moment(event).format('DD/MM/YYYY');\n        time = moment(event).format('HH:mm'); // date = typeof(date)\n\n        console.log(typeof date);\n        return this.setState({\n          date,\n          time\n        });\n      }\n    };\n\n    this.addShift = () => {\n      this.props.addShift(this.state.firstName, this.state.lastName, this.state.date);\n    };\n\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      date: \"\",\n      time: \"\"\n    };\n  }\n\n  componentDidMount() {// this.setState({date: Date()})\n  }\n\n  render() {\n    const _this$props = this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n;\n    const height = 38;\n    const marginLeft = '5%';\n    const heightD = '10%';\n    let input = [{\n      formName: \"First Name\",\n      stateName: \"firstName\"\n    }, {\n      formName: \"Last Name\",\n      stateName: \"lastName\"\n    }];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(MuiPickersUtilsProvider, {\n      utils: DateFnsUtils,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      container: true,\n      justify: \"space-between\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"firstName\",\n      name: \"firstName\",\n      label: t('Observer First Name'),\n      className: \"ShiftInput\",\n      value: this.state.firstName,\n      onChange: this.handleInput,\n      margin: \"none\",\n      autoComplete: \"on\",\n      style: {\n        height,\n        marginLeft\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"lastName\",\n      name: \"lastName\",\n      label: t('Observer Last Name'),\n      className: \"ShiftInput\",\n      value: this.state.lastName,\n      onChange: this.handleInput,\n      margin: \"none\",\n      autoComplete: \"on\",\n      hiddenLabel: true,\n      style: {\n        height,\n        marginLeft\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(KeyboardDatePicker, {\n      margin: \"normal\",\n      id: \"date\",\n      label: t('Date of observation'),\n      format: \"dd/mm/yyyy\",\n      value: moment(this.state.date, 'dd/mm/yyyy').toDate() // defaultValue={this.state.date}\n      ,\n      onChange: this.handleInput,\n      KeyboardButtonProps: {\n        'aria-label': t('Date')\n      },\n      InputLabelProps: {\n        shrink: true\n      },\n      style: {\n        height: heightD,\n        marginLeft\n      },\n      variant: \"standard\",\n      size: \"small\",\n      helperText: false // type=\"date\"\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(KeyboardTimePicker, {\n      margin: \"none\",\n      id: \"time\",\n      label: t('Time '),\n      format: \"HH:mm\" // defaultValue=\"15:02\"\n      ,\n      value: moment(this.state.time, 'HH:mm').toDate(),\n      onChange: this.handleInput,\n      KeyboardButtonProps: {\n        'aria-label': t('Time')\n      },\n      className: \"dateinput\",\n      style: {\n        height: heightD,\n        marginLeft\n      },\n      InputLabelProps: {\n        shrink: true\n      },\n      helperText: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default withTranslation('translation')(ShiftInput);","map":{"version":3,"sources":["C:/Users/benja/Desktop/Fullstack Bootcamp/projects/Tortuga Pedasi/tortugaspedasi/tortugaspedasi/src/Components/Form/ShiftInput.js"],"names":["React","Component","withTranslation","TextField","DateFnsUtils","Typography","Grid","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","moment","ShiftInput","constructor","props","handleInput","event","console","log","state","date","time","target","setState","id","value","format","addShift","firstName","lastName","componentDidMount","render","t","i18n","height","marginLeft","heightD","input","formName","stateName","toDate","shrink"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,eAAT,QAAgC,eAAhC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,mBAAjC;AACA,SAASC,uBAAT,EAAkCC,kBAAlC,EAAsDC,kBAAtD,QAAgF,sBAAhF;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,MAAMC,UAAN,SAAyBV,SAAzB,CAAmC;AAE/BW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAYnBC,WAZmB,GAYJC,KAAD,IAAW;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AACA,UAAIG,KAAK,qBAAQ,KAAKA,KAAb,CAAT;;AACA,UAAIC,IAAI,GAAGD,KAAK,CAACC,IAAjB;AACA,UAAIC,IAAI,GAAGF,KAAK,CAACE,IAAjB,CAJqB,CAKrB;AACA;;AACA,UAAIL,KAAK,CAACM,MAAV,EAAkB;AAEd,eAAO,KAAKC,QAAL,CAAc;AAAE,WAACP,KAAK,CAACM,MAAN,CAAaE,EAAd,GAAmBR,KAAK,CAACM,MAAN,CAAaG;AAAlC,SAAd,CAAP;AACH,OAHD,MAGO;AACHL,QAAAA,IAAI,GAAGT,MAAM,CAACK,KAAD,CAAN,CAAcU,MAAd,CAAqB,YAArB,CAAP;AACAL,QAAAA,IAAI,GAAGV,MAAM,CAACK,KAAD,CAAN,CAAcU,MAAd,CAAqB,OAArB,CAAP,CAFG,CAGH;;AACAT,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAQE,IAApB;AACA,eAAO,KAAKG,QAAL,CAAc;AAAEH,UAAAA,IAAF;AAAQC,UAAAA;AAAR,SAAd,CAAP;AACH;AACJ,KA7BkB;;AAAA,SA8BnBM,QA9BmB,GA8BR,MAAM;AACb,WAAKb,KAAL,CAAWa,QAAX,CAAoB,KAAKR,KAAL,CAAWS,SAA/B,EAA0C,KAAKT,KAAL,CAAWU,QAArD,EAA+D,KAAKV,KAAL,CAAWC,IAA1E;AACH,KAhCkB;;AAEf,SAAKD,KAAL,GAAa;AACTS,MAAAA,SAAS,EAAE,EADF;AAETC,MAAAA,QAAQ,EAAE,EAFD;AAGTT,MAAAA,IAAI,EAAE,EAHG;AAITC,MAAAA,IAAI,EAAE;AAJG,KAAb;AAMH;;AACDS,EAAAA,iBAAiB,GAAG,CAChB;AACH;;AAuBDC,EAAAA,MAAM,GAAG;AAAA,wBACe,KAAKjB,KADpB;AAAA,UACGkB,CADH,eACGA,CADH;AAAA,UACMC,IADN,eACMA,IADN;AAEL,UAAMC,MAAM,GAAG,EAAf;AACA,UAAMC,UAAU,GAAG,IAAnB;AACA,UAAMC,OAAO,GAAG,KAAhB;AACA,QAAIC,KAAK,GAAG,CAAC;AAAEC,MAAAA,QAAQ,EAAE,YAAZ;AAA0BC,MAAAA,SAAS,EAAE;AAArC,KAAD,EAAqD;AAAED,MAAAA,QAAQ,EAAE,WAAZ;AAAyBC,MAAAA,SAAS,EAAE;AAApC,KAArD,CAAZ;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,oBAAC,uBAAD;AAAyB,MAAA,KAAK,EAAElC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAC,eAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AACI,MAAA,EAAE,EAAC,WADP;AAEI,MAAA,IAAI,EAAC,WAFT;AAGI,MAAA,KAAK,EAAE2B,CAAC,CAAC,qBAAD,CAHZ;AAII,MAAA,SAAS,EAAC,YAJd;AAKI,MAAA,KAAK,EAAE,KAAKb,KAAL,CAAWS,SALtB;AAMI,MAAA,QAAQ,EAAE,KAAKb,WANnB;AAOI,MAAA,MAAM,EAAC,MAPX;AAQI,MAAA,YAAY,EAAC,IARjB;AASI,MAAA,KAAK,EAAE;AAAEmB,QAAAA,MAAF;AAAUC,QAAAA;AAAV,OATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAgBI,oBAAC,SAAD;AACI,MAAA,EAAE,EAAC,UADP;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,KAAK,EAAEH,CAAC,CAAC,oBAAD,CAHZ;AAII,MAAA,SAAS,EAAC,YAJd;AAKI,MAAA,KAAK,EAAE,KAAKb,KAAL,CAAWU,QALtB;AAMI,MAAA,QAAQ,EAAE,KAAKd,WANnB;AAOI,MAAA,MAAM,EAAC,MAPX;AAQI,MAAA,YAAY,EAAC,IARjB;AASI,MAAA,WAAW,EAAE,IATjB;AAUI,MAAA,KAAK,EAAE;AAAEmB,QAAAA,MAAF;AAAUC,QAAAA;AAAV,OAVX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBJ,EA4BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5BJ,EA6BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7BJ,EA8BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9BJ,EAiDI,oBAAC,kBAAD;AACI,MAAA,MAAM,EAAC,QADX;AAEI,MAAA,EAAE,EAAC,MAFP;AAGI,MAAA,KAAK,EAAEH,CAAC,CAAC,qBAAD,CAHZ;AAII,MAAA,MAAM,EAAC,YAJX;AAKI,MAAA,KAAK,EAAErB,MAAM,CAAC,KAAKQ,KAAL,CAAWC,IAAZ,EAAkB,YAAlB,CAAN,CAAsCoB,MAAtC,EALX,CAMI;AANJ;AAOI,MAAA,QAAQ,EAAE,KAAKzB,WAPnB;AAQI,MAAA,mBAAmB,EAAE;AACjB,sBAAciB,CAAC,CAAC,MAAD;AADE,OARzB;AAWI,MAAA,eAAe,EAAE;AAAES,QAAAA,MAAM,EAAE;AAAV,OAXrB;AAYI,MAAA,KAAK,EAAE;AAAEP,QAAAA,MAAM,EAAEE,OAAV;AAAmBD,QAAAA;AAAnB,OAZX;AAaI,MAAA,OAAO,EAAC,UAbZ;AAcI,MAAA,IAAI,EAAC,OAdT;AAeI,MAAA,UAAU,EAAE,KAfhB,CAgBI;AAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjDJ,EAoEI,oBAAC,kBAAD;AACI,MAAA,MAAM,EAAC,MADX;AAEI,MAAA,EAAE,EAAC,MAFP;AAGI,MAAA,KAAK,EAAEH,CAAC,CAAC,OAAD,CAHZ;AAII,MAAA,MAAM,EAAC,OAJX,CAKI;AALJ;AAMI,MAAA,KAAK,EAAErB,MAAM,CAAC,KAAKQ,KAAL,CAAWE,IAAZ,EAAkB,OAAlB,CAAN,CAAiCmB,MAAjC,EANX;AAOI,MAAA,QAAQ,EAAE,KAAKzB,WAPnB;AAQI,MAAA,mBAAmB,EAAE;AACjB,sBAAciB,CAAC,CAAC,MAAD;AADE,OARzB;AAWI,MAAA,SAAS,EAAC,WAXd;AAYI,MAAA,KAAK,EAAE;AAAEE,QAAAA,MAAM,EAAEE,OAAV;AAAmBD,QAAAA;AAAnB,OAZX;AAaI,MAAA,eAAe,EAAE;AAAEM,QAAAA,MAAM,EAAE;AAAV,OAbrB;AAcI,MAAA,UAAU,EAAE,KAdhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApEJ,CADJ,CAFJ,CADJ;AA4FH;;AAtI8B;;AAyInC,eAAetC,eAAe,CAAC,aAAD,CAAf,CAA+BS,UAA/B,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { withTranslation } from 'react-i18next';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { Typography, Grid } from '@material-ui/core';\r\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from '@material-ui/pickers';\r\nimport moment from 'moment';\r\n\r\nclass ShiftInput extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            date: \"\",\r\n            time: \"\"\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        // this.setState({date: Date()})\r\n    }\r\n    handleInput = (event) => {\r\n        console.log(event)\r\n        let state = { ...this.state }\r\n        let date = state.date\r\n        let time = state.time\r\n        // let property = \"\";\r\n        // let value = \"\"\r\n        if (event.target) {\r\n\r\n            return this.setState({ [event.target.id]: event.target.value })\r\n        } else {\r\n            date = moment(event).format('DD/MM/YYYY')\r\n            time = moment(event).format('HH:mm')\r\n            // date = typeof(date)\r\n            console.log(typeof (date))\r\n            return this.setState({ date, time })\r\n        }\r\n    }\r\n    addShift = () => {\r\n        this.props.addShift(this.state.firstName, this.state.lastName, this.state.date)\r\n    }\r\n\r\n    render() {\r\n        const { t, i18n } = this.props;\r\n        const height = 38;\r\n        const marginLeft = '5%';\r\n        const heightD = '10%';\r\n        let input = [{ formName: \"First Name\", stateName: \"firstName\" }, { formName: \"Last Name\", stateName: \"lastName\" }]\r\n        return (\r\n            <div>\r\n                {/* <h4>{t('Shift')}</h4> */}\r\n                <MuiPickersUtilsProvider utils={DateFnsUtils} >\r\n                    <Grid container justify=\"space-between\">\r\n                        <TextField\r\n                            id=\"firstName\"\r\n                            name=\"firstName\"\r\n                            label={t('Observer First Name')}\r\n                            className=\"ShiftInput\"\r\n                            value={this.state.firstName}\r\n                            onChange={this.handleInput}\r\n                            margin=\"none\"\r\n                            autoComplete=\"on\"\r\n                            style={{ height, marginLeft }}\r\n                        />\r\n                        {/* <span className=\"individualShift\">  </span> */}\r\n                        {/* <span className=\"individualShift\"> {i.formName}: </span> \r\n                           <input className=\"shiftInput\"\r\n                            name={i.stateName} onChange={this.handleInput}></input> */}\r\n                        <TextField\r\n                            id=\"lastName\"\r\n                            name=\"lastName\"\r\n                            label={t('Observer Last Name')}\r\n                            className=\"ShiftInput\"\r\n                            value={this.state.lastName}\r\n                            onChange={this.handleInput}\r\n                            margin=\"none\"\r\n                            autoComplete=\"on\"\r\n                            hiddenLabel={true}\r\n                            style={{ height, marginLeft }}\r\n                        />\r\n                        <br />\r\n                        <br />\r\n                        <br />\r\n                        {/* <label>\r\n                         <input type=\"date\" name=\"date\" value={this.state.date} onChange={this.handleInput} /> \r\n                        \r\n                    <TextField\r\n                        id=\"date\"\r\n                        label=\r\n                        type=\"datetime-local\"\r\n                        defaultValue={this.state.date}\r\n                        className=\"dateinput\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        onChange={this.handleInput}\r\n                        style={{ height }}\r\n                        margin=\"none\"\r\n                    /> \r\n                    </label> */}\r\n\r\n                        <KeyboardDatePicker\r\n                            margin=\"normal\"\r\n                            id=\"date\"\r\n                            label={t('Date of observation')}\r\n                            format=\"dd/mm/yyyy\"\r\n                            value={moment(this.state.date, 'dd/mm/yyyy').toDate()}\r\n                            // defaultValue={this.state.date}\r\n                            onChange={this.handleInput}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': t('Date'),\r\n                            }}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            style={{ height: heightD, marginLeft }}\r\n                            variant=\"standard\"\r\n                            size=\"small\"\r\n                            helperText={false}\r\n                            // type=\"date\"\r\n                            \r\n                            />\r\n                        <KeyboardTimePicker\r\n                            margin=\"none\"\r\n                            id=\"time\"\r\n                            label={t('Time ')}\r\n                            format=\"HH:mm\"\r\n                            // defaultValue=\"15:02\"\r\n                            value={moment(this.state.time, 'HH:mm').toDate()}\r\n                            onChange={this.handleInput}\r\n                            KeyboardButtonProps={{\r\n                                'aria-label': t('Time'),\r\n                            }}\r\n                            className=\"dateinput\"\r\n                            style={{ height: heightD, marginLeft }}\r\n                            InputLabelProps={{ shrink: true }}\r\n                            helperText={false}\r\n                        />\r\n                    </Grid>\r\n                </MuiPickersUtilsProvider>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslation('translation')(ShiftInput);\r\n"]},"metadata":{},"sourceType":"module"}