{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\benja\\\\Desktop\\\\Fullstack Bootcamp\\\\projects\\\\Tortuga Pedasi\\\\tortugaspedasi\\\\tortugaspedasi\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\benja\\\\Desktop\\\\Fullstack Bootcamp\\\\projects\\\\Tortuga Pedasi\\\\tortugaspedasi\\\\tortugaspedasi\\\\src\\\\Components\\\\Form\\\\TurtleInput.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { green } from '@material-ui/core/colors';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel'; // import RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\n// import RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\n\nimport '../Form/turtle.css';\nimport { MenuList, InputAdornment, Input, InputLabel } from '@material-ui/core';\n\nclass TurtleInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInput = event => {\n      console.log(event.target.id);\n      this.setState({\n        [event.target.id]: event.target.value\n      });\n\n      let turtlestate = _objectSpread({}, this.state);\n\n      console.log(this.state);\n      this.props.updateTurtle(turtlestate);\n    };\n\n    this.addTurtleInput = () => {\n      this.props.addTurtleInput(this.state.species, this.state.gender, this.state.condition.status, this.state.condition.stage, this.state.dimensions.plain.length, this.state.dimensions.plain.width, this.state.dimensions.curve.length, this.state.dimensions.curve.width, this.state.markings.rightSide, this.state.markings.leftSide);\n    };\n\n    this.handleClick = event => {\n      // let state = { ...this.state }\n      let anchorEl = _objectSpread({}, this.state.anchorEl); // console.log(event.currentTarget.id)\n      // let anchorStat = state.anchorStat\n\n\n      anchorEl = event.currentTarget.id;\n      return this.setState({\n        anchorEl\n      }); // setAnchorEl(event.currentTarget);\n    };\n\n    this.handleMenu = event => {\n      let anchorStat = _objectSpread({}, this.state.anchorStat);\n\n      anchorStat = event.currentTarget.id;\n      return this.setState({\n        anchorStat\n      }); // setAnchorEl(event.currentTarget);\n    };\n\n    this.handleClose = event => {\n      // setAnchorEl(null);\n      // let anchorEl = {...this.state.anchorEl}\n      let result = _objectSpread({}, this.state.species);\n\n      result = event.currentTarget.id;\n      console.log(result.length);\n\n      if (result.length == 2) {\n        return this.setState({\n          species: result,\n          anchorEl: null\n        });\n      } else {\n        return this.setState({\n          conditionstage: result,\n          anchorStat: null\n        });\n      } // console.log(this.state)\n\n    };\n\n    this.handleRadioButton = event => {\n      let gender = _objectSpread({}, this.state.gender);\n\n      gender = event.currentTarget.value;\n      console.log(event.currentTarget.value);\n      this.setState({\n        gender\n      });\n    };\n\n    this.state = {\n      anchorEl: null,\n      anchorStat: null,\n      species: \"\",\n      gender: null,\n      conditionstat: \"\",\n      conditionstage: \"\",\n      dimensionsPl: 0,\n      dimensionsPw: 0,\n      dimensionsCl: 0,\n      dimensionsCw: 0,\n      markingsRs: \"\",\n      markingsLs: \"\",\n      commentaries: \"\",\n      menuItems: [{\n        key: \"alive\",\n        caption: \"Alive\",\n        subMenuItems: [{\n          key: \"aliveh\",\n          caption: \"Alive Healthy\",\n          onClick: () => {}\n        }, {\n          key: \"alivei\",\n          caption: \"Alive Injured\",\n          onClick: () => {}\n        }]\n      }, {\n        key: \"death\",\n        caption: \"Death\",\n        subMenuItems: [{\n          key: \"death1\",\n          caption: \"Death Stage 1\",\n          onClick: () => {}\n        }, {\n          key: \"death2\",\n          caption: \"Death Stage 2\",\n          onClick: () => {}\n        }, {\n          key: \"death3\",\n          caption: \"Death Stage 3\",\n          onClick: () => {}\n        }, {\n          key: \"death4\",\n          caption: \"Death Stage 4\",\n          onClick: () => {}\n        }]\n      }]\n    };\n  }\n\n  // there is className = \"child-turtle\" for nested children to help with the CSS\n  render() {\n    return React.createElement(\"div\", {\n      className: \"turtle-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Turtle Information\"), React.createElement(\"div\", {\n      className: \"turtle-component\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"new-turtle-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(Button, {\n      id: \"species\",\n      \"aria-controls\": \"simple-menu\",\n      \"aria-haspopup\": \"true\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Species: \"), React.createElement(Menu, {\n      id: \"simple-menu\",\n      anchorEl: this.state.anchorEl,\n      keepMounted: true,\n      open: Boolean(this.state.anchorEl),\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      onClick: this.handleClose,\n      id: \"Cc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Caretta caretta\"), React.createElement(MenuItem, {\n      onClick: this.handleClose,\n      id: \"Lo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, \"Lepidochelys olivacea\"), React.createElement(MenuItem, {\n      onClick: this.handleClose,\n      id: \"Cm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Chelonia mydas\"), React.createElement(MenuItem, {\n      onClick: this.handleClose,\n      id: \"Ei\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Eretmochelys imbricata\"), React.createElement(MenuItem, {\n      onClick: this.handleClose,\n      id: \"Dc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Dermochelys coriacea\"))), React.createElement(\"span\", {\n      className: \"radiobut\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(RadioGroup, {\n      \"aria-label\": \"gender\",\n      name: \"gender2\",\n      value: this.state.gender,\n      onChange: this.handleRadioButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Gender: \", React.createElement(FormControlLabel, {\n      display: \"block\",\n      value: \"female\",\n      control: React.createElement(Radio, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }),\n      label: \"Female\" // labelPlacement=\"start\"\n      ,\n      id: \"female\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      display: \"block\",\n      value: \"male\",\n      control: React.createElement(Radio, {\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }),\n      label: \"Male\" // labelPlacement=\"start\"\n      ,\n      id: \"male\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"new-turtle-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Condition\", React.createElement(Button, {\n      id: \"conditions\",\n      \"aria-controls\": \"simple-menu\",\n      \"aria-haspopup\": \"true\",\n      onClick: this.handleMenu,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, \"Condition & Stage: \"), React.createElement(Menu, {\n      id: \"conditions\",\n      anchorEl: this.state.anchorStat,\n      keepMounted: true,\n      open: Boolean(this.state.anchorStat),\n      onClose: this.handleClose,\n      MenuItem: this.state.menuItems,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, this.state.menuItems.map(i => {\n      return React.createElement(MenuItem, {\n        id: i.key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, i.caption);\n    }), \" \")), React.createElement(\"div\", {\n      className: \"new-turtle-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"Dimensions\", React.createElement(\"div\", {\n      className: \"child-turtle\",\n      className: \"new-turtle-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, \" Plain \"), React.createElement(\"div\", {\n      className: \"child-turtle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"new-turtle-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \" Length: \"), React.createElement(Input, {\n      id: \"dimensionsPl\",\n      value: this.state.dimensionsPl,\n      onChange: this.handleInput,\n      endAdornment: React.createElement(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"mts\"),\n      \"aria-describedby\": \"measure-helper-text\",\n      inputProps: {\n        'aria-label': 'measure'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"child-turtle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"new-turtle-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \" Width: \"), React.createElement(Input, {\n      id: \"dimensionsPw\",\n      value: this.state.dimensionsPw,\n      onChange: this.handleInput,\n      endAdornment: React.createElement(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"mts\"),\n      \"aria-describedby\": \"measure-helper-text\",\n      inputProps: {\n        'aria-label': 'measure'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"child-turtle\",\n      className: \"new-turtle-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \" Curve \"), React.createElement(\"div\", {\n      className: \"child-turtle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"new-turtle-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, \" Width: \"), React.createElement(Input, {\n      id: \"dimensionsCw\",\n      value: this.state.dimensionsCw,\n      onChange: this.handleInput,\n      endAdornment: React.createElement(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, \"mts\"),\n      \"aria-describedby\": \"measure-helper-text\",\n      inputProps: {\n        'aria-label': 'measure'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"child-turtle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"new-turtle-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, \" Length: \"), React.createElement(Input, {\n      id: \"dimensionsCl\",\n      value: this.state.dimensionsCl,\n      onChange: this.handleInput,\n      endAdornment: React.createElement(InputAdornment, {\n        position: \"end\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, \"mts\"),\n      \"aria-describedby\": \"measure-helper-text\",\n      inputProps: {\n        'aria-label': 'measure'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"new-turtle-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, \"Markings\", React.createElement(\"div\", {\n      className: \"child-turtle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"component-simple\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, \"Right Side: \"), React.createElement(Input, {\n      id: \"markingsRs\",\n      value: this.state.markingsRs,\n      onChange: this.handleInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"child-turtle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"component-simple\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, \"Left Side: \"), React.createElement(Input, {\n      id: \"markingsLs\",\n      value: this.state.markingsLs,\n      onChange: this.handleInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default TurtleInput;","map":{"version":3,"sources":["C:/Users/benja/Desktop/Fullstack Bootcamp/projects/Tortuga Pedasi/tortugaspedasi/tortugaspedasi/src/Components/Form/TurtleInput.js"],"names":["React","Component","Button","Menu","MenuItem","green","Radio","RadioGroup","FormHelperText","FormControlLabel","FormControl","FormLabel","MenuList","InputAdornment","Input","InputLabel","TurtleInput","constructor","props","handleInput","event","console","log","target","id","setState","value","turtlestate","state","updateTurtle","addTurtleInput","species","gender","condition","status","stage","dimensions","plain","length","width","curve","markings","rightSide","leftSide","handleClick","anchorEl","currentTarget","handleMenu","anchorStat","handleClose","result","conditionstage","handleRadioButton","conditionstat","dimensionsPl","dimensionsPw","dimensionsCl","dimensionsCw","markingsRs","markingsLs","commentaries","menuItems","key","caption","subMenuItems","onClick","render","Boolean","map","i"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { green } from '@material-ui/core/colors';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n// import RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\n// import RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\r\nimport '../Form/turtle.css';\r\nimport { MenuList, InputAdornment, Input, InputLabel } from '@material-ui/core';\r\n\r\n\r\nclass TurtleInput extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            anchorEl: null,\r\n            anchorStat: null,\r\n            species: \"\",\r\n            gender: null,\r\n            conditionstat: \"\",\r\n            conditionstage: \"\",\r\n            dimensionsPl: 0,\r\n            dimensionsPw: 0,\r\n            dimensionsCl: 0,\r\n            dimensionsCw: 0,\r\n            markingsRs: \"\",\r\n            markingsLs: \"\",\r\n            commentaries: \"\",\r\n            menuItems : [\r\n            {\r\n              key: \"alive\",\r\n              caption: \"Alive\",\r\n              subMenuItems: [\r\n                {\r\n                  key: \"aliveh\",\r\n                  caption: \"Alive Healthy\",\r\n                  onClick: () => {}\r\n                },\r\n                {\r\n                  key: \"alivei\",\r\n                  caption: \"Alive Injured\",\r\n                  onClick: () => {}\r\n                },\r\n              ]\r\n            }, \r\n            {\r\n                key: \"death\",\r\n                caption: \"Death\",\r\n                subMenuItems: [\r\n                  {\r\n                    key: \"death1\",\r\n                    caption: \"Death Stage 1\",\r\n                    onClick: () => {}\r\n                  },\r\n                  {\r\n                    key: \"death2\",\r\n                    caption: \"Death Stage 2\",\r\n                    onClick: () => {}\r\n                  },\r\n                  {\r\n                    key: \"death3\",\r\n                    caption: \"Death Stage 3\",\r\n                    onClick: () => {}\r\n                  },\r\n                  {\r\n                    key: \"death4\",\r\n                    caption: \"Death Stage 4\",\r\n                    onClick: () => {}\r\n                  }\r\n                ]\r\n              }\r\n          ]\r\n        }\r\n    }\r\n\r\n\r\n\r\n    handleInput = (event) => {\r\n        console.log(event.target.id)\r\n        this.setState({ [event.target.id]: event.target.value })\r\n        let turtlestate = { ...this.state }\r\n        console.log(this.state)\r\n        this.props.updateTurtle(turtlestate)\r\n    }\r\n    addTurtleInput = () => {\r\n        this.props.addTurtleInput(this.state.species, this.state.gender,\r\n            this.state.condition.status, this.state.condition.stage,\r\n            this.state.dimensions.plain.length, this.state.dimensions.plain.width, this.state.dimensions.curve.length, this.state.dimensions.curve.width,\r\n            this.state.markings.rightSide, this.state.markings.leftSide)\r\n    }\r\n\r\n    handleClick = (event) => {\r\n        // let state = { ...this.state }\r\n        let anchorEl = {...this.state.anchorEl}\r\n        // console.log(event.currentTarget.id)\r\n        // let anchorStat = state.anchorStat\r\n        anchorEl = event.currentTarget.id\r\n       return this.setState({ anchorEl})\r\n        // setAnchorEl(event.currentTarget);\r\n    };\r\n    handleMenu = (event) => {\r\n        let anchorStat = {...this.state.anchorStat}\r\n        anchorStat=event.currentTarget.id\r\n       return this.setState({ anchorStat})\r\n        // setAnchorEl(event.currentTarget);\r\n    };\r\n    handleClose = (event) => {\r\n        // setAnchorEl(null);\r\n        // let anchorEl = {...this.state.anchorEl}\r\n        let result = { ...this.state.species }\r\n        result = event.currentTarget.id\r\n        console.log(result.length)\r\n        if (result.length==2) {\r\n           return this.setState({ species: result, anchorEl: null }) \r\n            \r\n        }else{return this.setState({conditionstage: result, anchorStat: null })}\r\n        // console.log(this.state)\r\n    };\r\n\r\n    handleRadioButton = event => {\r\n        let gender = { ...this.state.gender };\r\n        gender = event.currentTarget.value\r\n        console.log(event.currentTarget.value)\r\n        this.setState({ gender });\r\n    };\r\n\r\n    // there is className = \"child-turtle\" for nested children to help with the CSS\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"turtle-container\">\r\n                <h2>Turtle Information</h2>\r\n\r\n                <div className=\"turtle-component\">\r\n                    <div className=\"new-turtle-1\">\r\n                        {/* <span className=\"new-turtle-1\"> Species: </span> \r\n                         <input className=\"searchInput underline new-turtle-2\"\r\n                            name=\"species\" id=\"species\" onChange={this.handleInput}></input> */}\r\n                        <Button id=\"species\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={this.handleClick}>\r\n                            Species: </Button>\r\n                        <Menu\r\n                            id=\"simple-menu\"\r\n                            anchorEl={this.state.anchorEl}\r\n                            keepMounted\r\n                            open={Boolean(this.state.anchorEl)}\r\n                            onClose={this.handleClose}\r\n                        >\r\n                            <MenuItem onClick={this.handleClose} id=\"Cc\">Caretta caretta</MenuItem>\r\n                            <MenuItem onClick={this.handleClose} id=\"Lo\">Lepidochelys olivacea</MenuItem>\r\n                            <MenuItem onClick={this.handleClose} id=\"Cm\">Chelonia mydas</MenuItem>\r\n                            <MenuItem onClick={this.handleClose} id=\"Ei\">Eretmochelys imbricata</MenuItem>\r\n                            <MenuItem onClick={this.handleClose} id=\"Dc\">Dermochelys coriacea</MenuItem>\r\n                        </Menu>\r\n                    </div>\r\n\r\n                    <span className=\"radiobut\">\r\n                        {/* <span className=\"new-turtle-1\"> Gender: </span>\r\n                        <input className=\"searchInput underline new-turtle-2\"\r\n                            name=\"gender\" id=\"gender\" onChange={this.handleInput}></input> */}\r\n                        <RadioGroup aria-label=\"gender\" name=\"gender2\" value={this.state.gender} onChange={this.handleRadioButton}>\r\n                           Gender: <FormControlLabel\r\n                            display=\"block\"\r\n                                value=\"female\"\r\n                                control={<Radio color=\"primary\" />}\r\n                                label=\"Female\"\r\n                                // labelPlacement=\"start\"\r\n                                id=\"female\"\r\n                            /><FormControlLabel\r\n                            display=\"block\"\r\n                                value=\"male\"\r\n                                control={<Radio color=\"secondary\" />}\r\n                                label=\"Male\"\r\n                                // labelPlacement=\"start\"\r\n                                id=\"male\"\r\n                            /></RadioGroup>\r\n                    </span>\r\n\r\n                        <div className=\"new-turtle-1\">\r\n                            Condition\r\n                        {/* <div className=\"child-turtle\">\r\n                                <span className=\"new-turtle-1\"> Status: </span>\r\n                                <input className=\"searchInput underline new-turtle-2\"\r\n                                    name=\"conditionstat\" id=\"conditionstat\" onChange={this.handleInput}></input>\r\n                            </div>\r\n\r\n                            <div className=\"child-turtle\">\r\n                                <span className=\"new-turtle-1\"> Stage: </span>\r\n                                <input className=\"searchInput underline new-turtle-2\"\r\n                                    name=\"conditionstage\" id=\"conditionstage\" onChange={this.handleInput}></input>\r\n                            </div> */}\r\n                            <Button id=\"conditions\" aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={this.handleMenu}>\r\n                            Condition & Stage: </Button>\r\n                        <Menu\r\n                            id=\"conditions\"\r\n                            anchorEl={this.state.anchorStat}\r\n                            keepMounted\r\n                            open={Boolean(this.state.anchorStat)}\r\n                            onClose={this.handleClose}\r\n                            MenuItem ={this.state.menuItems}\r\n                        >{this.state.menuItems.map(i => { return <MenuItem id={i.key} >{i.caption}</MenuItem>})} </Menu>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"new-turtle-1\">\r\n                            Dimensions\r\n    \r\n                        <div className=\"child-turtle\" className=\"new-turtle-1\"> Plain </div>\r\n\r\n                            <div className=\"child-turtle\">\r\n                                <span className=\"new-turtle-1\"> Length: </span>\r\n                                {/* <input className=\"searchInput underline new-turtle-2\"\r\n                                    name=\"dimensions.plain.length\" id=\"dimensionsPl\" onChange={this.handleInput}></input> */}\r\n                                    <Input\r\n                                    id=\"dimensionsPl\"\r\n                                    value={this.state.dimensionsPl}\r\n                                    onChange={this.handleInput}\r\n                                    endAdornment={<InputAdornment position=\"end\">mts</InputAdornment>}\r\n                                    aria-describedby=\"measure-helper-text\"\r\n                                    inputProps={{\r\n                                      'aria-label': 'measure',\r\n                                    }}\r\n                                    />\r\n                            </div>\r\n\r\n                            <div className=\"child-turtle\">\r\n                                <span className=\"new-turtle-1\"> Width: </span>\r\n                                {/* <input className=\"searchInput underline new-turtle-2\"\r\n                                    name=\"dimensions.plain.width\" id=\"dimensionsPw\" onChange={this.handleInput}></input> */}\r\n                                    <Input\r\n                                    id=\"dimensionsPw\"\r\n                                    value={this.state.dimensionsPw}\r\n                                    onChange={this.handleInput}\r\n                                    endAdornment={<InputAdornment position=\"end\">mts</InputAdornment>}\r\n                                    aria-describedby=\"measure-helper-text\"\r\n                                    inputProps={{\r\n                                      'aria-label': 'measure',\r\n                                    }}\r\n                                    />\r\n                            </div>\r\n\r\n                            <div className=\"child-turtle\" className=\"new-turtle-1\"> Curve </div>\r\n\r\n                            <div className=\"child-turtle\">\r\n                                <span className=\"new-turtle-1\"> Width: </span>\r\n                                {/* <input className=\"searchInput underline new-turtle-2\"\r\n                                    name=\"dimensions.plain.width\" id=\"dimensionsCw\" onChange={this.handleInput}></input> */}\r\n                            <Input\r\n                                    id=\"dimensionsCw\"\r\n                                    value={this.state.dimensionsCw}\r\n                                    onChange={this.handleInput}\r\n                                    endAdornment={<InputAdornment position=\"end\">mts</InputAdornment>}\r\n                                    aria-describedby=\"measure-helper-text\"\r\n                                    inputProps={{\r\n                                      'aria-label': 'measure',\r\n                                    }}\r\n                                    />\r\n                            </div>\r\n\r\n                            <div className=\"child-turtle\">\r\n                                <span className=\"new-turtle-1\"> Length: </span>\r\n                                {/* <input className=\"searchInput underline new-turtle-2\"\r\n                                    name=\"dimensions.plain.length\" id=\"dimensionsCl\" onChange={this.handleInput}></input> */}\r\n                            <Input\r\n                                    id=\"dimensionsCl\"\r\n                                    value={this.state.dimensionsCl}\r\n                                    onChange={this.handleInput}\r\n                                    endAdornment={<InputAdornment position=\"end\">mts</InputAdornment>}\r\n                                    aria-describedby=\"measure-helper-text\"\r\n                                    inputProps={{\r\n                                      'aria-label': 'measure',\r\n                                    }}\r\n                                    />\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div className=\"new-turtle-1\">\r\n                            Markings\r\n    \r\n                        <div className=\"child-turtle\">\r\n                                {/* <span className=\"new-turtle-1\"> Right Side: </span>\r\n                                <input className=\"searchInput underline new-turtle-2\"\r\n                                    name=\"markings.rightSide\" id=\"markingsRs\" onChange={this.handleInput}></input> */}\r\n                                <InputLabel htmlFor=\"component-simple\">Right Side: </InputLabel>\r\n                                <Input id=\"markingsRs\" value={this.state.markingsRs} onChange={this.handleInput} />\r\n                            </div>\r\n\r\n                            <div className=\"child-turtle\">\r\n                                {/* <span className=\"new-turtle-1\"> Left Side: </span>\r\n                                <input className=\"searchInput underline new-turtle-2\"\r\n                                    name=\"markings.leftSide\" id=\"markingsLs\" onChange={this.handleInput}></input> */}\r\n                            <InputLabel htmlFor=\"component-simple\">Left Side: </InputLabel>\r\n                                <Input id=\"markingsLs\" value={this.state.markingsLs} onChange={this.handleInput} />\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                );\r\n            }\r\n        }\r\n        \r\nexport default TurtleInput;"]},"metadata":{},"sourceType":"module"}