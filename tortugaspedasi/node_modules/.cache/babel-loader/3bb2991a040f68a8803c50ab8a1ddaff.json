{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\benja\\\\Desktop\\\\Fullstack Bootcamp\\\\projects\\\\Tortuga Pedasi\\\\tortugaspedasi\\\\tortugaspedasi\\\\src\\\\Components\\\\Spreadsheet\\\\UpdateForm.js\";\nimport React, { Component } from 'react';\n\nconst moment = require('moment');\n\nclass UpdateForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.closePopUp = () => {\n      this.props.closePopUp();\n    };\n\n    this.state = {\n      formId: props.form._id,\n      name: \"\"\n    };\n  }\n\n  // update = (event) => {\n  //     let item = event.target\n  //     this.setState({\n  //         name: item\n  //     })\n  // }\n  render() {\n    console.log(this.props.form);\n    let shift = this.props.form.shift;\n    let turtle = this.props.form.turtle; // let observation = this.props.form.observation\n    // let nest = this.props.form.nest\n\n    return React.createElement(\"div\", {\n      className: \"popUp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"ID: \", React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: this.props.form._id,\n      name: \"name\",\n      value: this.state.formId,\n      onChange: this.update,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"shift\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"h5\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, moment(shift.date).format(\"Do/MM/YY\")), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, shift.firstName, \" \", shift.lastName)), React.createElement(\"div\", {\n      id: \"turtle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"plain\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Plain: \", turtle.dimensions.plain.length, \", \", turtle.dimensions.plain.width), React.createElement(\"div\", {\n      id: \"curve\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Curve: \", turtle.dimensions.curve.length, \", \", turtle.dimensions.curve.width), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Species: \", turtle.species), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Gender: \", turtle.gender, \" \"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \" Status: \", turtle.condition.status), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \" Stage: \", turtle.condition.stage)), React.createElement(\"button\", {\n      onClick: this.closePopUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \" Close \"));\n  }\n\n}\n\nexport default UpdateForm;","map":{"version":3,"sources":["C:/Users/benja/Desktop/Fullstack Bootcamp/projects/Tortuga Pedasi/tortugaspedasi/tortugaspedasi/src/Components/Spreadsheet/UpdateForm.js"],"names":["React","Component","moment","require","UpdateForm","constructor","props","closePopUp","state","formId","form","_id","name","render","console","log","shift","turtle","update","date","format","firstName","lastName","dimensions","plain","length","width","curve","species","gender","condition","status","stage"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AAEA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AAC/BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,UATmB,GASN,MAAM;AACf,WAAKD,KAAL,CAAWC,UAAX;AACH,KAXkB;;AAEf,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAEH,KAAK,CAACI,IAAN,CAAWC,GADV;AAETC,MAAAA,IAAI,EAAE;AAFG,KAAb;AAKH;;AAMD;AACA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,MAAM,GAAG;AAELC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWI,IAAvB;AACA,QAAIM,KAAK,GAAG,KAAKV,KAAL,CAAWI,IAAX,CAAgBM,KAA5B;AACA,QAAIC,MAAM,GAAG,KAAKX,KAAL,CAAWI,IAAX,CAAgBO,MAA7B,CAJK,CAKL;AACA;;AAEA,WACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACQ;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAE,KAAKX,KAAL,CAAWI,IAAX,CAAgBC,GAAhD;AAAqD,MAAA,IAAI,EAAC,MAA1D;AAAiE,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,MAAnF;AAA2F,MAAA,QAAQ,EAAE,KAAKS,MAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADR,EAEI;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKhB,MAAM,CAACc,KAAK,CAACG,IAAP,CAAN,CAAmBC,MAAnB,CAA0B,UAA1B,CAAL,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKJ,KAAK,CAACK,SAAX,OAAuBL,KAAK,CAACM,QAA7B,CAFJ,CAFJ,EAMI;AAAK,MAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACWL,MAAM,CAACM,UAAP,CAAkBC,KAAlB,CAAwBC,MADnC,QAC6CR,MAAM,CAACM,UAAP,CAAkBC,KAAlB,CAAwBE,KADrE,CADJ,EAII;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACYT,MAAM,CAACM,UAAP,CAAkBI,KAAlB,CAAwBF,MADpC,QAC8CR,MAAM,CAACM,UAAP,CAAkBI,KAAlB,CAAwBD,KADtE,CAJJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaT,MAAM,CAACW,OAApB,CAPJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAYX,MAAM,CAACY,MAAnB,MARJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaZ,MAAM,CAACa,SAAP,CAAiBC,MAA9B,CATJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAYd,MAAM,CAACa,SAAP,CAAiBE,KAA7B,CAVJ,CANJ,EAoBI;AAAQ,MAAA,OAAO,EAAE,KAAKzB,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBApBJ,CADJ;AAwBH;;AArD8B;;AAwDnC,eAAeH,UAAf","sourcesContent":["import React, { Component } from 'react';\r\nconst moment = require('moment')\r\n\r\nclass UpdateForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            formId: props.form._id,\r\n            name: \"\",\r\n\r\n        }\r\n    }\r\n\r\n    closePopUp = () => {\r\n        this.props.closePopUp()\r\n    }\r\n\r\n    // update = (event) => {\r\n    //     let item = event.target\r\n    //     this.setState({\r\n    //         name: item\r\n    //     })\r\n    // }\r\n\r\n    render() {\r\n\r\n        console.log(this.props.form)\r\n        let shift = this.props.form.shift\r\n        let turtle = this.props.form.turtle\r\n        // let observation = this.props.form.observation\r\n        // let nest = this.props.form.nest\r\n\r\n        return (\r\n            <div className=\"popUp\">\r\n                ID: <input type=\"text\" placeholder={this.props.form._id} name=\"name\" value={this.state.formId} onChange={this.update} />\r\n                <div id=\"shift\">\r\n                    <h5>{moment(shift.date).format(\"Do/MM/YY\")}</h5>\r\n                    <h4>{shift.firstName} {shift.lastName}</h4>\r\n                </div>\r\n                <div id=\"turtle\">\r\n                    <div id=\"plain\">\r\n                       Plain: {turtle.dimensions.plain.length}, {turtle.dimensions.plain.width}\r\n                    </div>\r\n                    <div id=\"curve\">\r\n                        Curve: {turtle.dimensions.curve.length}, {turtle.dimensions.curve.width}\r\n                    </div>\r\n                    <p>Species: {turtle.species}</p>\r\n                    <p>Gender: {turtle.gender} </p>\r\n                    <p> Status: {turtle.condition.status}</p>\r\n                    <p> Stage: {turtle.condition.stage}</p>\r\n                </div>\r\n\r\n\r\n                <button onClick={this.closePopUp}> Close </button>\r\n            </div>)\r\n\r\n    }\r\n}\r\n\r\nexport default UpdateForm;"]},"metadata":{},"sourceType":"module"}