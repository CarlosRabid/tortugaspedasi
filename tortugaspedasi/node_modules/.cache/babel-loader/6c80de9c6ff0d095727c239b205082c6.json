{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\benja\\\\Desktop\\\\Fullstack Bootcamp\\\\projects\\\\Tortuga Pedasi\\\\tortugaspedasi\\\\tortugaspedasi\\\\src\\\\Components\\\\Form\\\\Form.js\";\nimport React, { Component } from 'react';\nimport ShiftInput from './ShiftInput';\nimport ObservationInput from './ObservationInput';\nimport TurtleInput from './TurtleInput';\n\nconst axios = require('axios');\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.submitNewForm = async (shift, observation, turtle, nest) => {\n      await axios.post('http://localhost:7777/newForm', {\n        shift,\n        observation,\n        turtle,\n        nest\n      });\n    };\n\n    this.state = {\n      forms: []\n    };\n  }\n\n  getPosition() {\n    function geoSucess(position) {\n      let geoCoords = {\n        lat: position.coords.latitude,\n        long: position.coords.longitude\n      };\n      alert(\"This are your coordinates: - Latitude: \".concat(geoCoords.lat, \" - Longitude: \").concat(geoCoords.long));\n      return geoCoords;\n    }\n\n    function geoError(errorPosition) {\n      alert(\"Error - Not position available\");\n    }\n\n    const geoOptions = {\n      enableHighAccuracy: true,\n      maximumAge: 0,\n      timeout: 25000\n    };\n\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(geoSucess, geoError, geoOptions);\n      console.log(\"True\");\n    } else {\n      console.log(\"Geolocation not enable in this device\");\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"TORTUGA WATCH FORM\"), React.createElement(ShiftInput, {\n      forms: this.state.forms,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(ObservationInput, {\n      forms: this.state.forms,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(TurtleInput, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"submit\",\n      onClick: this.submitNewForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["C:/Users/benja/Desktop/Fullstack Bootcamp/projects/Tortuga Pedasi/tortugaspedasi/tortugaspedasi/src/Components/Form/Form.js"],"names":["React","Component","ShiftInput","ObservationInput","TurtleInput","axios","require","Form","constructor","props","submitNewForm","shift","observation","turtle","nest","post","state","forms","getPosition","geoSucess","position","geoCoords","lat","coords","latitude","long","longitude","alert","geoError","errorPosition","geoOptions","enableHighAccuracy","maximumAge","timeout","navigator","geolocation","getCurrentPosition","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMC,IAAN,SAAmBN,SAAnB,CAA6B;AACzBO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAOnBC,aAPmB,GAOH,OAAOC,KAAP,EAAcC,WAAd,EAA2BC,MAA3B,EAAmCC,IAAnC,KAA4C;AACxD,YAAMT,KAAK,CAACU,IAAN,CAAW,+BAAX,EAA4C;AAACJ,QAAAA,KAAD;AAAQC,QAAAA,WAAR;AAAqBC,QAAAA,MAArB;AAA6BC,QAAAA;AAA7B,OAA5C,CAAN;AACH,KATkB;;AAEf,SAAKE,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGH;;AAMDC,EAAAA,WAAW,GAAG;AACV,aAASC,SAAT,CAAmBC,QAAnB,EAA4B;AAC1B,UAAIC,SAAS,GAAE;AACbC,QAAAA,GAAG,EAACF,QAAQ,CAACG,MAAT,CAAgBC,QADP;AAEbC,QAAAA,IAAI,EAACL,QAAQ,CAACG,MAAT,CAAgBG;AAFR,OAAf;AAIAC,MAAAA,KAAK,kDAA2CN,SAAS,CAACC,GAArD,2BAAyED,SAAS,CAACI,IAAnF,EAAL;AACA,aAAOJ,SAAP;AACD;;AAED,aAASO,QAAT,CAAkBC,aAAlB,EAAgC;AAC5BF,MAAAA,KAAK,CAAC,gCAAD,CAAL;AACH;;AAED,UAAMG,UAAU,GAAC;AACbC,MAAAA,kBAAkB,EAAE,IADP;AAEbC,MAAAA,UAAU,EAAE,CAFC;AAGbC,MAAAA,OAAO,EAAE;AAHI,KAAjB;;AAMA,QAAGC,SAAS,CAACC,WAAb,EAAyB;AACvBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCjB,SAAzC,EAAoDS,QAApD,EAA6DE,UAA7D;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD,KAHD,MAGK;AACHD,MAAAA,OAAO,CAACC,GAAR,CAAY,uCAAZ;AAED;AACF;;AAEHC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAE,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAEI,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,gBAAD;AAAkB,MAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAKI;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,OAAO,EAAE,KAAKP,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,CADJ;AASH;;AAnDwB;;AAuD7B,eAAeH,IAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport ShiftInput from './ShiftInput';\r\nimport ObservationInput from './ObservationInput';\r\nimport TurtleInput from './TurtleInput';\r\nconst axios = require('axios') \r\n\r\nclass Form extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n          forms: []\r\n        }\r\n    }\r\n\r\n    submitNewForm = async (shift, observation, turtle, nest) => {\r\n        await axios.post('http://localhost:7777/newForm', {shift, observation, turtle, nest})\r\n    }\r\n\r\n    getPosition() {\r\n        function geoSucess(position){\r\n          let geoCoords= {\r\n            lat:position.coords.latitude,\r\n            long:position.coords.longitude\r\n          }\r\n          alert(`This are your coordinates: - Latitude: ${geoCoords.lat} - Longitude: ${geoCoords.long}`)\r\n          return(geoCoords)\r\n        }\r\n    \r\n        function geoError(errorPosition){\r\n            alert(\"Error - Not position available\")\r\n        }\r\n    \r\n        const geoOptions={\r\n            enableHighAccuracy: true,\r\n            maximumAge: 0,\r\n            timeout: 25000\r\n        }\r\n        \r\n        if(navigator.geolocation){\r\n          navigator.geolocation.getCurrentPosition(geoSucess, geoError,geoOptions );\r\n          console.log(\"True\")\r\n        }else{\r\n          console.log(\"Geolocation not enable in this device\")\r\n    \r\n        }\r\n      }\r\n\r\n    render() { \r\n        return (\r\n            <div className= \"form\">\r\n                <h3>TORTUGA WATCH FORM</h3>\r\n                <ShiftInput forms={this.state.forms}/>\r\n                <ObservationInput forms={this.state.forms} /> \r\n                <TurtleInput />\r\n                <button className=\"submit\" onClick={this.submitNewForm}>Submit</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}