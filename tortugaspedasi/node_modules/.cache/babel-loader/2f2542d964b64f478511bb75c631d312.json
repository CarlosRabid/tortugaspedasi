{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\benja\\\\Desktop\\\\Fullstack Bootcamp\\\\projects\\\\Tortuga Pedasi\\\\tortugaspedasi\\\\tortugaspedasi\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\benja\\\\Desktop\\\\Fullstack Bootcamp\\\\projects\\\\Tortuga Pedasi\\\\tortugaspedasi\\\\tortugaspedasi\\\\src\\\\Components\\\\Form\\\\TurtleInput.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { withTranslation } from 'react-i18next';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { green } from '@material-ui/core/colors';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel'; // import RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\n// import RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\n\nimport '../Form/turtle.css';\nimport { MenuList, InputAdornment, Input, InputLabel, TextField } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport HealingIcon from '@material-ui/icons/Healing';\nimport Icon from '@material-ui/core/Icon';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'; // import { faHeartbeat } from '@fortawesome/free-solid-svg-icons'\n\nimport { faMedkit } from '@fortawesome/free-solid-svg-icons';\n\nclass TurtleInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInput = event => {\n      console.log(event.target.id);\n      this.setState({\n        [event.target.id]: event.target.value\n      });\n\n      let turtlestate = _objectSpread({}, this.state);\n\n      console.log(this.state);\n      this.props.updateTurtle(turtlestate);\n    };\n\n    this.addTurtleInput = () => {\n      this.props.addTurtleInput(this.state.species, this.state.gender, this.state.condition.status, this.state.condition.stage, this.state.dimensions.plain.length, this.state.dimensions.plain.width, this.state.dimensions.curve.length, this.state.dimensions.curve.width, this.state.markings.rightSide, this.state.markings.leftSide);\n    };\n\n    this.handleClick = event => {\n      // let state = { ...this.state }\n      let anchorEl = _objectSpread({}, this.state.anchorEl); // console.log(event.currentTarget.id)\n      // let anchorStat = state.anchorStat\n\n\n      anchorEl = event.currentTarget.id;\n      return this.setState({\n        anchorEl\n      }); // setAnchorEl(event.currentTarget);\n    };\n\n    this.handleMenu = event => {\n      let anchorStat = _objectSpread({}, this.state.anchorStat);\n\n      anchorStat = event.currentTarget.id;\n      return this.setState({\n        anchorStat\n      }); // setAnchorEl(event.currentTarget);\n    };\n\n    this.handleClose = event => {\n      // setAnchorEl(null);\n      // let anchorEl = {...this.state.anchorEl}\n      let result = _objectSpread({}, this.state.species);\n\n      result = event.currentTarget.id;\n      console.log(result);\n\n      if (result.length == 2) {\n        return this.setState({\n          species: result,\n          anchorEl: null\n        });\n      } else {\n        return this.setState({\n          conditionstage: result,\n          anchorStat: null\n        });\n      } // console.log(this.state)\n\n    };\n\n    this.handleButton = event => {\n      // setAnchorEl(null);\n      // let anchorEl = {...this.state.anchorEl}\n      let selected = _objectSpread({}, this.state.selected);\n\n      selected = event.currentTarget.id;\n      console.log(selected);\n      this.setState({\n        selected\n      });\n    };\n\n    this.handleRadioButton = event => {\n      let gender = _objectSpread({}, this.state.gender);\n\n      gender = event.currentTarget.value;\n      console.log(event.currentTarget.value);\n      this.setState({\n        gender\n      });\n    };\n\n    this.state = {\n      anchorEl: null,\n      anchorStat: null,\n      selected: null,\n      species: \"\",\n      gender: null,\n      conditionstat: \"\",\n      conditionstage: \"\",\n      dimensionsPl: 0,\n      dimensionsPw: 0,\n      dimensionsCl: 0,\n      dimensionsCw: 0,\n      markingsRs: \"\",\n      markingsLs: \"\",\n      commentaries: \"\",\n      menuItems: [{\n        key: \"alive\",\n        caption: \"Alive\",\n        subMenuItems: [{\n          key: \"aliveh\",\n          caption: \"Alive Healthy\",\n          onClick: () => {}\n        }, {\n          key: \"alivei\",\n          caption: \"Alive Injured\",\n          onClick: () => {}\n        }]\n      }, {\n        key: \"death\",\n        caption: \"Death\",\n        subMenuItems: [{\n          key: \"death1\",\n          caption: \"Death Stage 1\",\n          onClick: () => {}\n        }, {\n          key: \"death2\",\n          caption: \"Death Stage 2\",\n          onClick: () => {}\n        }, {\n          key: \"death3\",\n          caption: \"Death Stage 3\",\n          onClick: () => {}\n        }, {\n          key: \"death4\",\n          caption: \"Death Stage 4\",\n          onClick: () => {}\n        }]\n      }]\n    };\n  }\n\n  // there is className = \"child-turtle\" for nested children to help with the CSS\n  render() {\n    const _this$props = this.props,\n          t = _this$props.t,\n          i18n = _this$props.i18n;\n    return React.createElement(\"div\", {\n      className: \"turtle-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"medium\",\n      id: \"species\",\n      variant: \"outlined\",\n      color: \"inherit\",\n      className: \"observation\",\n      onClick: this.handleClick,\n      style: {\n        marginLeft: '16%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, this.state.species ? \"Species: \".concat(this.state.species) : t('>> Select Species ')), React.createElement(Menu, {\n      anchorEl: this.state.anchorEl,\n      keepMounted: true,\n      open: Boolean(this.state.anchorEl),\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(MenuItem, {\n      onClick: this.handleClose,\n      id: \"Cc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Caretta caretta\"), React.createElement(MenuItem, {\n      onClick: this.handleClose,\n      id: \"Lo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Lepidochelys olivacea\"), React.createElement(MenuItem, {\n      onClick: this.handleClose,\n      id: \"Cm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"Chelonia mydas\"), React.createElement(MenuItem, {\n      onClick: this.handleClose,\n      id: \"Ei\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Eretmochelys imbricata\"), React.createElement(MenuItem, {\n      onClick: this.handleClose,\n      id: \"Dc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"Dermochelys coriacea\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(RadioGroup, {\n      row: true,\n      \"aria-label\": \"Gender\",\n      name: \"gender2\",\n      value: this.state.gender,\n      onChange: this.handleRadioButton,\n      style: {\n        justifyContent: 'center',\n        marginTop: '2%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(FormControlLabel, {\n      display: \"block\",\n      value: \"female\",\n      control: React.createElement(Radio, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }),\n      label: \"Female\" // labelPlacement=\"start\"\n      ,\n      id: \"female\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }), React.createElement(FormControlLabel, {\n      display: \"block\",\n      value: \"male\",\n      control: React.createElement(Radio, {\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }),\n      label: \"Male\" // labelPlacement=\"start\"\n      ,\n      id: \"male\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      sm: 12,\n      md: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, t('Found Alive'), \" :\", React.createElement(ToggleButtonGroup, {\n      value: this.state.selected,\n      exclusive: true,\n      onChange: this.handleButton,\n      \"aria-label\": \"Alive\",\n      style: {\n        justifyContent: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(ToggleButton, {\n      id: \"alv1\",\n      value: \"alv1\",\n      \"aria-label\": \"Alive - Healthy\",\n      style: {\n        height: '6vh',\n        justifySelf: \"center\",\n        marginLeft: '13%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faHeartbeat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    })), React.createElement(ToggleButton, {\n      id: \"alv2\",\n      value: \"alv2\",\n      style: {\n        height: '6vh',\n        justifySelf: \"center\"\n      },\n      color: \"secondary\",\n      \"aria-label\": \"Alive - Injured\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faMedkit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), t('Found Death'), \" :\", React.createElement(ToggleButtonGroup, {\n      value: this.state.selected,\n      exclusive: true,\n      onChange: this.handleButton,\n      \"aria-label\": \"Deceased\",\n      style: {\n        justifyContent: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(ToggleButton, {\n      id: \"dea1\",\n      value: \"dea1\",\n      \"aria-label\": \"death1\",\n      style: {\n        height: '6vh',\n        justifySelf: \"center\",\n        marginLeft: '16%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faHeartbeat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    })), React.createElement(ToggleButton, {\n      id: \"dea2\",\n      value: 'dea2',\n      style: {\n        height: '6vh',\n        justifySelf: \"center\"\n      },\n      color: \"secondary\",\n      \"aria-label\": \"death2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faMedkit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    })), React.createElement(ToggleButton, {\n      id: \"dea3\",\n      value: \"dea3\",\n      \"aria-label\": \"death3\",\n      style: {\n        height: '6vh',\n        justifySelf: \"center\"\n      },\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faHeartbeat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    })), React.createElement(ToggleButton, {\n      id: \"dea4\",\n      value: \"dea4\",\n      \"aria-label\": \"death4\",\n      style: {\n        height: '6vh',\n        justifySelf: \"center\"\n      },\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faMedkit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    })), React.createElement(ToggleButton, {\n      id: \"dea5\",\n      value: \"dea5\",\n      \"aria-label\": \"death5\",\n      style: {\n        height: '6vh',\n        justifySelf: \"center\"\n      },\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faHeartbeat,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    })), React.createElement(ToggleButton, {\n      id: \"dea6\",\n      value: \"dea6\",\n      \"aria-label\": \"death6\",\n      style: {\n        height: '6vh',\n        justifySelf: \"center\"\n      },\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faMedkit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    })))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }), t('Dimensions in cms'), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"dimensions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"turtle-dimensions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, t('Plain      '), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      value: this.state.dimensionsPl,\n      onChange: this.handleInput,\n      label: \"LENGTH\",\n      id: \"dimensionsPl\",\n      className: \"turtle\",\n      size: \"small\",\n      style: {\n        width: '33%',\n        marginLeft: '5%'\n      } // InputProps={{\n      //     startAdornment: <InputAdornment position=\"start\">cms</InputAdornment>,\n      // }}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      value: this.state.dimensionsPw,\n      onChange: this.handleInput,\n      label: \"WIDTH\",\n      id: \"dimensionsPw\",\n      className: \"turtle\",\n      size: \"small\",\n      style: {\n        width: '33%',\n        marginLeft: '5%'\n      } // InputProps={{\n      //     startAdornment: <InputAdornment position=\"start\">cms</InputAdornment>,\n      // }}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"turtle-dimensions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, t(' Curve '), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      value: this.state.dimensionsCl,\n      onChange: this.handleInput,\n      label: \"LENGTH\",\n      id: \"dimensionsCl\",\n      className: \"turtle\",\n      size: \"small\",\n      style: {\n        width: '33%',\n        marginLeft: '4%'\n      } // InputProps={{\n      //     startAdornment: <InputAdornment position=\"start\">cms</InputAdornment>,\n      // }}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      value: this.state.dimensionsCw,\n      onChange: this.handleInput,\n      label: \"WIDTH\",\n      id: \"dimensionsCw\",\n      className: \"turtle\",\n      size: \"small\",\n      style: {\n        width: '33%',\n        marginLeft: '4%'\n      } // InputProps={{\n      //     startAdornment: <InputAdornment position=\"start\">cms</InputAdornment>,\n      // }}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"markings\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, t('Markings'), React.createElement(InputLabel, {\n      htmlFor: \"component-simple\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337\n      },\n      __self: this\n    }, t('Right Side'), \": \"), React.createElement(Input, {\n      id: \"markingsRs\",\n      value: this.state.markingsRs,\n      onChange: this.handleInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }), React.createElement(InputLabel, {\n      htmlFor: \"component-simple\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, \"Left Side: \"), React.createElement(Input, {\n      id: \"markingsLs\",\n      value: this.state.markingsLs,\n      onChange: this.handleInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default withTranslation('translation')(TurtleInput);","map":{"version":3,"sources":["C:/Users/benja/Desktop/Fullstack Bootcamp/projects/Tortuga Pedasi/tortugaspedasi/tortugaspedasi/src/Components/Form/TurtleInput.js"],"names":["React","Component","Button","withTranslation","Menu","MenuItem","green","Radio","RadioGroup","FormHelperText","FormControlLabel","FormControl","FormLabel","MenuList","InputAdornment","Input","InputLabel","TextField","Grid","FavoriteIcon","HealingIcon","Icon","ToggleButton","ToggleButtonGroup","FontAwesomeIcon","faMedkit","TurtleInput","constructor","props","handleInput","event","console","log","target","id","setState","value","turtlestate","state","updateTurtle","addTurtleInput","species","gender","condition","status","stage","dimensions","plain","length","width","curve","markings","rightSide","leftSide","handleClick","anchorEl","currentTarget","handleMenu","anchorStat","handleClose","result","conditionstage","handleButton","selected","handleRadioButton","conditionstat","dimensionsPl","dimensionsPw","dimensionsCl","dimensionsCw","markingsRs","markingsLs","commentaries","menuItems","key","caption","subMenuItems","onClick","render","t","i18n","marginLeft","Boolean","justifyContent","marginTop","height","justifySelf","faHeartbeat"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withTranslation } from 'react-i18next';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { green } from '@material-ui/core/colors';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\n// import RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\n// import RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\r\nimport '../Form/turtle.css';\r\nimport { MenuList, InputAdornment, Input, InputLabel, TextField } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport HealingIcon from '@material-ui/icons/Healing';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n// import { faHeartbeat } from '@fortawesome/free-solid-svg-icons'\r\nimport { faMedkit } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\n\r\nclass TurtleInput extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            anchorEl: null,\r\n            anchorStat: null,\r\n            selected: null,\r\n            species: \"\",\r\n            gender: null,\r\n            conditionstat: \"\",\r\n            conditionstage: \"\",\r\n            dimensionsPl: 0,\r\n            dimensionsPw: 0,\r\n            dimensionsCl: 0,\r\n            dimensionsCw: 0,\r\n            markingsRs: \"\",\r\n            markingsLs: \"\",\r\n            commentaries: \"\",\r\n            menuItems: [\r\n                {\r\n                    key: \"alive\",\r\n                    caption: \"Alive\",\r\n                    subMenuItems: [\r\n                        {\r\n                            key: \"aliveh\",\r\n                            caption: \"Alive Healthy\",\r\n                            onClick: () => { }\r\n                        },\r\n                        {\r\n                            key: \"alivei\",\r\n                            caption: \"Alive Injured\",\r\n                            onClick: () => { }\r\n                        },\r\n                    ]\r\n                },\r\n                {\r\n                    key: \"death\",\r\n                    caption: \"Death\",\r\n                    subMenuItems: [\r\n                        {\r\n                            key: \"death1\",\r\n                            caption: \"Death Stage 1\",\r\n                            onClick: () => { }\r\n                        },\r\n                        {\r\n                            key: \"death2\",\r\n                            caption: \"Death Stage 2\",\r\n                            onClick: () => { }\r\n                        },\r\n                        {\r\n                            key: \"death3\",\r\n                            caption: \"Death Stage 3\",\r\n                            onClick: () => { }\r\n                        },\r\n                        {\r\n                            key: \"death4\",\r\n                            caption: \"Death Stage 4\",\r\n                            onClick: () => { }\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n\r\n\r\n    handleInput = (event) => {\r\n        console.log(event.target.id)\r\n        this.setState({ [event.target.id]: event.target.value })\r\n        let turtlestate = { ...this.state }\r\n        console.log(this.state)\r\n        this.props.updateTurtle(turtlestate)\r\n    }\r\n    addTurtleInput = () => {\r\n        this.props.addTurtleInput(this.state.species, this.state.gender,\r\n            this.state.condition.status, this.state.condition.stage,\r\n            this.state.dimensions.plain.length, this.state.dimensions.plain.width, this.state.dimensions.curve.length, this.state.dimensions.curve.width,\r\n            this.state.markings.rightSide, this.state.markings.leftSide)\r\n    }\r\n\r\n    handleClick = (event) => {\r\n        // let state = { ...this.state }\r\n        let anchorEl = { ...this.state.anchorEl }\r\n        // console.log(event.currentTarget.id)\r\n        // let anchorStat = state.anchorStat\r\n        anchorEl = event.currentTarget.id\r\n        return this.setState({ anchorEl })\r\n        // setAnchorEl(event.currentTarget);\r\n    };\r\n    handleMenu = (event) => {\r\n        let anchorStat = { ...this.state.anchorStat }\r\n        anchorStat = event.currentTarget.id\r\n        return this.setState({ anchorStat })\r\n        // setAnchorEl(event.currentTarget);\r\n    };\r\n    handleClose = (event) => {\r\n        // setAnchorEl(null);\r\n        // let anchorEl = {...this.state.anchorEl}\r\n        let result = { ...this.state.species }\r\n        result = event.currentTarget.id\r\n        console.log(result)\r\n        if (result.length == 2) {\r\n            return this.setState({ species: result, anchorEl: null })\r\n\r\n        } else { return this.setState({ conditionstage: result, anchorStat: null }) }\r\n        // console.log(this.state)\r\n    };\r\n    handleButton = (event) => {\r\n        // setAnchorEl(null);\r\n        // let anchorEl = {...this.state.anchorEl}\r\n        let selected = { ...this.state.selected }\r\n        selected = event.currentTarget.id\r\n        console.log(selected)\r\n        this.setState({ selected })\r\n    };\r\n\r\n    handleRadioButton = event => {\r\n        let gender = { ...this.state.gender };\r\n        gender = event.currentTarget.value\r\n        console.log(event.currentTarget.value)\r\n        this.setState({ gender });\r\n    };\r\n\r\n    // there is className = \"child-turtle\" for nested children to help with the CSS\r\n\r\n    render() {\r\n        const { t, i18n } = this.props;\r\n\r\n        return (\r\n            <div className=\"turtle-container\" >\r\n                <Button size=\"medium\" id=\"species\"\r\n                    variant=\"outlined\" color=\"inherit\"\r\n                    className=\"observation\" onClick={this.handleClick}\r\n                    style={{ marginLeft: '16%' }}\r\n                >\r\n                    {this.state.species ? `Species: ${this.state.species}` : t('>> Select Species ')}\r\n                </Button>\r\n                <Menu\r\n                    anchorEl={this.state.anchorEl}\r\n                    keepMounted\r\n                    open={Boolean(this.state.anchorEl)}\r\n                    onClose={this.handleClose}\r\n                >\r\n                    <MenuItem onClick={this.handleClose} id=\"Cc\">Caretta caretta</MenuItem>\r\n                    <MenuItem onClick={this.handleClose} id=\"Lo\">Lepidochelys olivacea</MenuItem>\r\n                    <MenuItem onClick={this.handleClose} id=\"Cm\">Chelonia mydas</MenuItem>\r\n                    <MenuItem onClick={this.handleClose} id=\"Ei\">Eretmochelys imbricata</MenuItem>\r\n                    <MenuItem onClick={this.handleClose} id=\"Dc\">Dermochelys coriacea</MenuItem>\r\n                </Menu>\r\n                <br />\r\n                <RadioGroup row aria-label=\"Gender\" name=\"gender2\" value={this.state.gender} onChange={this.handleRadioButton} style={{ justifyContent: 'center', marginTop: '2%' }}><FormControlLabel\r\n                    display=\"block\"\r\n                    value=\"female\"\r\n                    control={<Radio color=\"primary\" />}\r\n                    label=\"Female\"\r\n                    // labelPlacement=\"start\"\r\n                    id=\"female\"\r\n                />\r\n                    <FormControlLabel\r\n                        display=\"block\"\r\n                        value=\"male\"\r\n                        control={<Radio color=\"secondary\" />}\r\n                        label=\"Male\"\r\n                        // labelPlacement=\"start\"\r\n                        id=\"male\"\r\n                    />\r\n                </RadioGroup>\r\n                <Grid item sm={12} md={6}>\r\n                    {t('Found Alive')} :\r\n                    <ToggleButtonGroup\r\n                        value={this.state.selected}\r\n                        exclusive\r\n                        onChange={this.handleButton}\r\n                        aria-label=\"Alive\"\r\n                        style={{ justifyContent: \"center\" }}\r\n                    >\r\n                        <ToggleButton id=\"alv1\" value=\"alv1\" aria-label=\"Alive - Healthy\"\r\n                            style={{ height: '6vh', justifySelf: \"center\", marginLeft: '13%' }}>\r\n                            <FontAwesomeIcon icon={faHeartbeat} />\r\n                        </ToggleButton>\r\n                        <ToggleButton id=\"alv2\" value=\"alv2\" \r\n                        style={{ height: '6vh', justifySelf: \"center\" }} \r\n                        color=\"secondary\" aria-label=\"Alive - Injured\">\r\n                            <FontAwesomeIcon icon={faMedkit} />\r\n                        </ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                    <br />\r\n                    {t('Found Death')} :\r\n                 <ToggleButtonGroup\r\n                        value={this.state.selected}\r\n                        exclusive\r\n                        onChange={this.handleButton}\r\n                        aria-label=\"Deceased\"\r\n                        style={{ justifyContent: \"center\" }}\r\n                    >\r\n                        <ToggleButton id=\"dea1\" value=\"dea1\" aria-label=\"death1\"\r\n                            style={{ height: '6vh', justifySelf: \"center\", marginLeft: '16%' }}\r\n                        >\r\n                            <FontAwesomeIcon icon={faHeartbeat} />\r\n                        </ToggleButton>\r\n                        <ToggleButton id=\"dea2\" value={'dea2'}\r\n                            style={{ height: '6vh', justifySelf: \"center\" }}\r\n                            color=\"secondary\" aria-label=\"death2\">\r\n                            <FontAwesomeIcon icon={faMedkit} />\r\n                        </ToggleButton>\r\n                        <ToggleButton id=\"dea3\" value='dea3' aria-label=\"death3\"\r\n                            style={{ height: '6vh', justifySelf: \"center\" }}\r\n                            color=\"secondary\"\r\n                        >\r\n                            <FontAwesomeIcon icon={faHeartbeat} />\r\n                        </ToggleButton>\r\n                        <ToggleButton id=\"dea4\" value='dea4' aria-label=\"death4\"\r\n                            style={{ height: '6vh', justifySelf: \"center\" }}\r\n                            color=\"secondary\"\r\n                        >\r\n                            <FontAwesomeIcon icon={faMedkit} />\r\n                        </ToggleButton>\r\n                        <ToggleButton id=\"dea5\" value='dea5' aria-label=\"death5\"\r\n                            style={{ height: '6vh', justifySelf: \"center\" }}\r\n                            color=\"secondary\"\r\n                        >\r\n                            <FontAwesomeIcon icon={faHeartbeat} />\r\n                        </ToggleButton>\r\n                        <ToggleButton id=\"dea6\" value='dea6' aria-label=\"death6\"\r\n                            style={{ height: '6vh', justifySelf: \"center\" }}\r\n                            color=\"secondary\" >\r\n                            <FontAwesomeIcon icon={faMedkit} />\r\n                        </ToggleButton>\r\n                    </ToggleButtonGroup>\r\n                </Grid>\r\n                {/* <div className=\"child-turtle\">\r\n                                 <span className=\"new-turtle-1\"> Length: </span>\r\n                                 <Input\r\n                                 id=\"dimensionsPl\"\r\n                                 value={this.state.dimensionsPl}\r\n                                 onChange={this.handleInput}\r\n                                 endAdornment={<InputAdornment position=\"end\">mts</InputAdornment>}\r\n                                 aria-describedby=\"measure-helper-text\"\r\n                                 inputProps={{\r\n                                     'aria-label': 'measure',\r\n                                 }}\r\n                                 />\r\n                             </div>  */}\r\n                <br />\r\n                {t('Dimensions in cms')}\r\n                <br />\r\n                <div className=\"dimensions\">\r\n                    <div className=\"turtle-dimensions\" >\r\n                        {t('Plain      ')}\r\n                        <br />\r\n                        <TextField\r\n                            value={this.state.dimensionsPl}\r\n                            onChange={this.handleInput}\r\n                            label=\"LENGTH\"\r\n                            id=\"dimensionsPl\"\r\n                            className=\"turtle\"\r\n                            size=\"small\"\r\n                            style={{ width: '33%', marginLeft: '5%' }}\r\n                        // InputProps={{\r\n                        //     startAdornment: <InputAdornment position=\"start\">cms</InputAdornment>,\r\n                        // }}\r\n                        />\r\n                        <TextField\r\n                            value={this.state.dimensionsPw}\r\n                            onChange={this.handleInput}\r\n                            label=\"WIDTH\"\r\n                            id=\"dimensionsPw\"\r\n                            className=\"turtle\"\r\n                            size=\"small\"\r\n                            style={{ width: '33%', marginLeft: '5%' }}\r\n                        // InputProps={{\r\n                        //     startAdornment: <InputAdornment position=\"start\">cms</InputAdornment>,\r\n                        // }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"turtle-dimensions\" >\r\n                        {t(' Curve ')}\r\n                        <br />\r\n                        <TextField\r\n                            value={this.state.dimensionsCl}\r\n                            onChange={this.handleInput}\r\n                            label=\"LENGTH\"\r\n                            id=\"dimensionsCl\"\r\n                            className=\"turtle\"\r\n                            size=\"small\"\r\n                            style={{ width: '33%', marginLeft: '4%' }}\r\n                        // InputProps={{\r\n                        //     startAdornment: <InputAdornment position=\"start\">cms</InputAdornment>,\r\n                        // }}\r\n                        />\r\n                        <TextField\r\n                            value={this.state.dimensionsCw}\r\n                            onChange={this.handleInput}\r\n                            label=\"WIDTH\"\r\n                            id=\"dimensionsCw\"\r\n                            className=\"turtle\"\r\n                            size=\"small\"\r\n                            style={{ width: '33%', marginLeft: '4%' }}\r\n                        // InputProps={{\r\n                        //     startAdornment: <InputAdornment position=\"start\">cms</InputAdornment>,\r\n                        // }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <br />\r\n                <div className=\"markings\">\r\n                    {t('Markings')}\r\n                    <InputLabel htmlFor=\"component-simple\">{t('Right Side')}: </InputLabel>\r\n                    <Input id=\"markingsRs\" value={this.state.markingsRs} onChange={this.handleInput} />\r\n                    <InputLabel htmlFor=\"component-simple\">Left Side: </InputLabel>\r\n                    <Input id=\"markingsLs\" value={this.state.markingsLs} onChange={this.handleInput} />\r\n                </div>\r\n                <br />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withTranslation('translation')(TurtleInput);"]},"metadata":{},"sourceType":"module"}