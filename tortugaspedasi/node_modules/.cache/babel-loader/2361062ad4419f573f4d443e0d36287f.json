{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\benja\\\\Desktop\\\\Fullstack Bootcamp\\\\projects\\\\Tortuga Pedasi\\\\tortugaspedasi\\\\tortugaspedasi\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom';\nimport { withTranslation } from 'react-i18next';\nimport NavBar from './Components/NavBar';\nimport Login from './Components/Login';\nimport Landing from './Components/Landing';\nimport Form from './Components/Form/Form';\nimport Spreadsheet from './Components/Spreadsheet/Spreadsheet';\nimport Analytics from './Components/Analytics/Analytics';\nimport './App.css';\n\nconst axios = require('axios');\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.updateUser = name => {\n      this.setState({\n        userName: name\n      });\n    };\n\n    this.updateNavBar = location => {\n      this.setState({\n        location: location\n      });\n    };\n\n    this.changeLanguage = () => {\n      const i18n = this.props.i18n;\n\n      if (this.state.lng === \"en\") {\n        i18n.changeLanguage(\"es\");\n        return this.setState({\n          lng: \"es\"\n        });\n      } else {\n        i18n.changeLanguage(\"en\");\n        return this.setState({\n          lng: \"en\"\n        });\n      }\n    };\n\n    this.isLoggedIn = () => localStorage.getItem(\"isLoggedIn\") || this.state.userName;\n\n    this.logOut = () => {\n      this.setState({\n        isLoggedIn: false,\n        userName: '',\n        lng: \"en\"\n      });\n      localStorage.removeItem('isLoggedIn');\n    };\n\n    this.state = {\n      location: \"\",\n      userName: \"\",\n      lng: \"en\",\n      isOnline: true\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isOnline: navigator.onLine\n    });\n\n    if (this.state.isOnline) {\n      let storage = localStorage.getItem('form');\n      axios.post('http://localhost:7777/mega', {\n        storage\n      });\n      console.log('there is something in there');\n    } else {\n      console.log('there isnt anything sooo...');\n    }\n  }\n\n  saveForm(shift, observation, turtle, nest) {\n    if (navigator.onLine) {\n      axios.post('http://localhost:7777/mega-form', {\n        shift,\n        observation,\n        turtle,\n        nest\n      });\n      console.log('online');\n    } else {\n      let form = {\n        shift: '',\n        observation: '',\n        turtle: '',\n        nest: ''\n      };\n      localStorage.form = JSON.stringify(form);\n      console.log('offline');\n    }\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      location: this.state.location,\n      logOut: this.logOut,\n      name: this.state.userName,\n      updateNavBar: this.updateNavBar,\n      lng: this.state.lng,\n      changeLanguage: this.changeLanguage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      render: () => this.isLoggedIn() ? React.createElement(Redirect, {\n        to: \"/home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }) : React.createElement(Login, {\n        updateUser: this.updateUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/home\",\n      exact: true,\n      render: () => React.createElement(Landing, {\n        updateNavBar: this.updateNavBar,\n        isLoggedIn: this.isLoggedIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/form\",\n      exact: true,\n      render: () => React.createElement(Form, {\n        updateNavBar: this.updateNavBar,\n        isLoggedIn: this.isLoggedIn,\n        saveForm: this.saveForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/spread\",\n      exact: true,\n      render: () => React.createElement(Spreadsheet, {\n        updateNavBar: this.updateNavBar,\n        isLoggedIn: this.isLoggedIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/analytics\",\n      exact: true,\n      render: () => React.createElement(Analytics, {\n        updateNavBar: this.updateNavBar,\n        isLoggedIn: this.isLoggedIn,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default withTranslation('translation')(App);","map":{"version":3,"sources":["C:/Users/benja/Desktop/Fullstack Bootcamp/projects/Tortuga Pedasi/tortugaspedasi/tortugaspedasi/src/App.js"],"names":["React","Component","BrowserRouter","Route","Redirect","withTranslation","NavBar","Login","Landing","Form","Spreadsheet","Analytics","axios","require","App","constructor","updateUser","name","setState","userName","updateNavBar","location","changeLanguage","i18n","props","state","lng","isLoggedIn","localStorage","getItem","logOut","removeItem","isOnline","componentDidMount","navigator","onLine","storage","post","console","log","saveForm","shift","observation","turtle","nest","form","JSON","stringify","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom';\r\nimport { withTranslation } from 'react-i18next';\r\nimport NavBar from './Components/NavBar';\r\nimport Login from './Components/Login';\r\nimport Landing from './Components/Landing';\r\nimport Form from './Components/Form/Form';\r\nimport Spreadsheet from './Components/Spreadsheet/Spreadsheet';\r\nimport Analytics from './Components/Analytics/Analytics';\r\nimport './App.css';\r\nconst axios = require('axios')\r\n\r\n\r\n\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      location: \"\",\r\n      userName: \"\",\r\n      lng: \"en\",\r\n      isOnline: true,\r\n    }\r\n  }\r\n\r\n  componentDidMount (){\r\n    this.setState({isOnline: navigator.onLine})\r\n    if(this.state.isOnline) {\r\n      let storage = localStorage.getItem('form')\r\n      axios.post('http://localhost:7777/mega', {storage})\r\n      console.log('there is something in there')\r\n    }\r\n    else {\r\n      console.log('there isnt anything sooo...')\r\n\r\n    }\r\n  }\r\n\r\n  saveForm (shift, observation, turtle, nest) {\r\n    if (navigator.onLine) {\r\n      axios.post('http://localhost:7777/mega-form', { shift, observation, turtle, nest })\r\n      console.log('online')\r\n    }\r\n    else {\r\n      let form = { shift: '', observation: '', turtle: '', nest: '' } \r\n      localStorage.form = JSON.stringify(form)\r\n      console.log('offline')\r\n    }\r\n  }\r\n\r\n  updateUser = (name) => {\r\n    this.setState({\r\n      userName: name\r\n    })\r\n  }\r\n  updateNavBar = (location) => {\r\n    this.setState({\r\n      location: location\r\n    })\r\n  }\r\n\r\n  changeLanguage = () => {\r\n    const { i18n } = this.props;\r\n    if (this.state.lng === \"en\") {\r\n\r\n      i18n.changeLanguage(\"es\");\r\n      return this.setState({ lng: \"es\" })\r\n    } else {\r\n      i18n.changeLanguage(\"en\")\r\n      return this.setState({ lng: \"en\" })\r\n    }\r\n  };\r\n\r\n  isLoggedIn = () => localStorage.getItem(\"isLoggedIn\") || this.state.userName\r\n\r\n  logOut = () => {\r\n    this.setState({\r\n      isLoggedIn: false,\r\n      userName: '',\r\n      lng: \"en\"\r\n    })  \r\n    localStorage.removeItem('isLoggedIn') }\r\n\r\n  render() {\r\n\r\n    return (<>\r\n      {/* <button onClick={() => changeLanguage('en')}>en</button>\r\n        <button onClick={() => changeLanguage('es')}>es</button> */}\r\n      {/* <FormControlLabel\r\n        control={<Switch checked={(this.state.lng === \"es\") ? true : false} onChange={this.changeLanguage} />}\r\n        label={(this.state.lng === \"es\") ? \"Switch to English\" : \"Cambiar a Español\"}\r\n      /> */}\r\n      <div>\r\n\r\n        <BrowserRouter>\r\n\r\n          <NavBar location={this.state.location}\r\n            logOut={this.logOut}\r\n            name={this.state.userName}\r\n            updateNavBar={this.updateNavBar}\r\n            lng={this.state.lng}\r\n            changeLanguage={this.changeLanguage}>\r\n          \r\n          </NavBar>\r\n\r\n\r\n          <Route path=\"/\" exact render={() =>\r\n            (this.isLoggedIn() ?\r\n              <Redirect to=\"/home\" /> :\r\n            <Login updateUser={this.updateUser} />)}>\r\n          </Route>\r\n\r\n          <Route path=\"/home\" exact render={() =>\r\n            <Landing updateNavBar={this.updateNavBar} isLoggedIn={this.isLoggedIn} />}>\r\n          </Route>\r\n\r\n          <Route path=\"/form\" exact render={() =>\r\n            <Form updateNavBar={this.updateNavBar} isLoggedIn={this.isLoggedIn} saveForm={this.saveForm} />}>\r\n          </Route>\r\n\r\n          <Route path=\"/spread\" exact render={() =>\r\n            <Spreadsheet updateNavBar={this.updateNavBar} isLoggedIn={this.isLoggedIn} />}>\r\n          </Route>\r\n\r\n          <Route path=\"/analytics\" exact render={() =>\r\n            <Analytics updateNavBar={this.updateNavBar} isLoggedIn={this.isLoggedIn} />}>\r\n          </Route>\r\n\r\n            {/* testing local storage being saved offline\r\n          <button onClick={this.saveForm} >SAVE FORM</button> */}\r\n\r\n        </BrowserRouter>\r\n\r\n      </div></>\r\n    );\r\n    \r\n  }\r\n}\r\n\r\nexport default withTranslation('translation')(App);"]},"metadata":{},"sourceType":"module"}