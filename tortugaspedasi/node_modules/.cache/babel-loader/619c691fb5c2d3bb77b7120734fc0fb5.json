{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\benja\\\\Desktop\\\\Fullstack Bootcamp\\\\projects\\\\Tortuga Pedasi\\\\tortugaspedasi\\\\tortugaspedasi\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\benja\\\\Desktop\\\\Fullstack Bootcamp\\\\projects\\\\Tortuga Pedasi\\\\tortugaspedasi\\\\tortugaspedasi\\\\src\\\\Components\\\\Analytics\\\\DynamicChart.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, Legend } from 'recharts';\nimport Axios from 'axios';\n\nclass DynamicChart extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      let data = [...this.state.data];\n      let newData = data.splice(0); // Only for User Experience purposes (to force chart to reanimate)\n\n      this.setState({\n        option: e.target.value,\n        data: newData\n      });\n    };\n\n    this.state = {\n      data: [],\n      option: \"turtleCount\"\n    };\n  }\n\n  async componentDidMount() {\n    let response = await Axios.get('http://localhost:7777/formData');\n    this.setState({\n      data: response.data.map(d => {\n        // This randomly generates a number for the moon phases. TO DO map moon phase to number and add legend\n        return _objectSpread({}, d, {\n          moonPhase: Math.floor(Math.random() * 4 + 1)\n        });\n      })\n    });\n  }\n\n  render() {\n    let options = [\"turtleCount\", \"nestCount\", \"eggCount\"];\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Count: \"), React.createElement(\"select\", {\n      id: \"countBy\",\n      value: this.state.option,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, options.map(o => React.createElement(\"option\", {\n      value: o,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, o))), React.createElement(BarChart, {\n      width: 600,\n      height: 300,\n      data: this.state.data,\n      margin: {\n        top: 20,\n        right: 30,\n        left: 20,\n        bottom: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(XAxis, {\n      dataKey: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      yAxisId: \"left\",\n      orientation: \"left\",\n      stroke: \"#8884d8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(YAxis, {\n      yAxisId: \"right\",\n      orientation: \"right\",\n      stroke: \"#82ca9d\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(Tooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Legend, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(Bar, {\n      yAxisId: \"left\",\n      dataKey: this.state.option,\n      fill: \"#8884d8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Bar, {\n      yAxisId: \"right\",\n      dataKey: \"moonPhase\",\n      fill: \"#82ca9d\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default DynamicChart;","map":{"version":3,"sources":["C:/Users/benja/Desktop/Fullstack Bootcamp/projects/Tortuga Pedasi/tortugaspedasi/tortugaspedasi/src/Components/Analytics/DynamicChart.js"],"names":["React","Component","BarChart","Bar","XAxis","YAxis","Tooltip","Legend","Axios","DynamicChart","constructor","handleChange","e","data","state","newData","splice","setState","option","target","value","componentDidMount","response","get","map","d","moonPhase","Math","floor","random","render","options","o","top","right","left","bottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    BarChart, Bar, XAxis, YAxis, Tooltip, Legend,\r\n} from 'recharts';\r\nimport Axios from 'axios';\r\n\r\nclass DynamicChart extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            data: [],\r\n            option: \"turtleCount\",\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        let data = [...this.state.data]\r\n        let newData = data.splice(0) // Only for User Experience purposes (to force chart to reanimate)\r\n        this.setState({ option: e.target.value, data: newData })\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let response = await Axios.get('http://localhost:7777/formData')\r\n        this.setState({\r\n            data: response.data.map(d => { \r\n                // This randomly generates a number for the moon phases. TO DO map moon phase to number and add legend\r\n                return { ...d, moonPhase: Math.floor(Math.random() * 4 + 1) }\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let options = [\"turtleCount\", \"nestCount\", \"eggCount\"]\r\n        return (\r\n            <div>\r\n                <h3>Count: </h3>\r\n                <select id=\"countBy\" value={this.state.option} onChange={this.handleChange}>\r\n                    {options.map(o => <option value={o}>{o}</option>)}\r\n                </select>\r\n\r\n                <BarChart width={600} height={300} data={this.state.data}\r\n                    margin={{ top: 20, right: 30, left: 20, bottom: 5 }}>\r\n\r\n                    <XAxis dataKey=\"date\" />\r\n                    <YAxis yAxisId=\"left\" orientation=\"left\" stroke=\"#8884d8\" />\r\n                    <YAxis yAxisId=\"right\" orientation=\"right\" stroke=\"#82ca9d\" />\r\n                    <Tooltip />\r\n                    <Legend />\r\n                    <Bar yAxisId=\"left\" dataKey={this.state.option} fill=\"#8884d8\" />\r\n                    <Bar yAxisId=\"right\" dataKey=\"moonPhase\" fill=\"#82ca9d\" />\r\n                </BarChart>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DynamicChart;"]},"metadata":{},"sourceType":"module"}