{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\benja\\\\Desktop\\\\Fullstack Bootcamp\\\\projects\\\\Tortuga Pedasi\\\\tortugaspedasi\\\\tortugaspedasi\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\benja\\\\Desktop\\\\Fullstack Bootcamp\\\\projects\\\\Tortuga Pedasi\\\\tortugaspedasi\\\\tortugaspedasi\\\\src\\\\Components\\\\Form\\\\Form.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react'; // import { makeStyles } from '@material-ui/core/styles';\n\nimport ShiftInput from './ShiftInput';\nimport Turtle from './Turtle';\nimport NestInput from './NestInput'; //import Fab from '@material-ui/core/Fab';\n// import SaveIcon from '@material-ui/icons/Save';\n\nimport Button from '@material-ui/core/Button';\nimport './form.css';\nimport { withTranslation } from 'react-i18next';\nimport { Paper, Typography } from '@material-ui/core';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'; //import ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\n//import IconButton from '@material-ui/core/IconButton';\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport BeachLocations from './BeachLocations';\nimport Comments from './ObservationComments';\n\nconst axios = require('axios');\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleBeachInput = async input => {\n      console.log(input);\n\n      let locationLatitude = _objectSpread({}, this.state.locationLatitude);\n\n      let locationLongitude = _objectSpread({}, this.state.locationLongitude);\n\n      let selectedBeach = _objectSpread({}, this.state.selectedBeach);\n\n      locationLatitude = input.locationLatitude;\n      locationLongitude = input.locationLongitude;\n      selectedBeach = input.selectedBeach;\n      await this.setState({\n        locationLatitude,\n        locationLongitude,\n        selectedBeach\n      });\n    };\n\n    this.handleTurtInput = async input => {\n      let turtle = _objectSpread({}, this.state.turtle);\n\n      turtle = input;\n      await this.setState({\n        turtle\n      });\n    };\n\n    this.handleName = async (first, last) => {\n      let firstName = _objectSpread({}, this.state.firstName);\n\n      let lastName = _objectSpread({}, this.state.lastName);\n\n      firstName = first;\n      lastName = last;\n      await this.setState({\n        firstName,\n        lastName\n      });\n    };\n\n    this.handleDate = async (first, last) => {\n      let date = _objectSpread({}, this.state.date);\n\n      let time = _objectSpread({}, this.state.time);\n\n      date = first;\n      time = last;\n      await this.setState({\n        date,\n        time\n      });\n    };\n\n    this.handleShift = async input => {\n      let firstName = _objectSpread({}, this.state.firstName);\n\n      let lastName = _objectSpread({}, this.state.lastName);\n\n      let date = _objectSpread({}, this.state.date);\n\n      let time = _objectSpread({}, this.state.time);\n\n      firstName = input.firstName;\n      lastName = input.lastName;\n      date = input.date;\n      time = input.time;\n      await this.setState({\n        firstName,\n        lastName,\n        date,\n        time\n      });\n    };\n\n    this.handleNest = input => {\n      let eggCount = _objectSpread({}, this.state.eggCount);\n\n      let layTime = _objectSpread({}, this.state.layTime);\n\n      let hatchEst = _objectSpread({}, this.state.hatchEst);\n\n      let rehomed = _objectSpread({}, this.state.rehomed);\n\n      eggCount = input.eggCount;\n      layTime = input.layTime;\n      hatchEst = input.hatchEst;\n      rehomed = input.rehomed;\n      this.setState({\n        eggCount,\n        layTime,\n        hatchEst,\n        rehomed\n      });\n    };\n\n    this.handleLab = input => {\n      let salvageable = _objectSpread({}, this.state.salvageable);\n\n      salvageable = input.salvageable;\n      this.setState({\n        salvageable\n      });\n    };\n\n    this.checkTurtleData = formInput => {\n      console.log(formInput);\n\n      const exist = function (element) {\n        return element !== null;\n      };\n\n      let hasTurtle = _objectSpread({}, this.state.hasTurtle); // hasTurtle = formInput.turtleInput.some(exist)\n\n\n      this.setState({\n        hasTurtle\n      });\n    };\n\n    this.checkNestData = formInput => {\n      const exist = function (element) {\n        return element !== null;\n      };\n\n      let hasNest = _objectSpread({}, this.state.hasNest);\n\n      hasNest = formInput.NestInput.some(exist);\n      this.setState({\n        hasNest\n      });\n    };\n\n    this.submitNewForm = async (shift, observation, turtle, nest) => {\n      console.log('working');\n      await axios.post('http://localhost:7777/newForm', {\n        shift,\n        observation,\n        turtle,\n        nest\n      });\n    };\n\n    this.handleExpandClick = event => {\n      console.log(event.target);\n      let showFpart = true; // showFpart = !showFpart\n\n      console.log(showFpart);\n      this.setState({\n        showFpart: showFpart\n      });\n    };\n\n    this.state = {\n      locationLatitude: \"\",\n      // set-up by beach selection\n      locationLongitude: \"\",\n      // set-up by beach selection\n      selectedBeach: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      date: \"\",\n      time: \"\",\n      turtle: {},\n      eggCount: \"\",\n      layTime: \"\",\n      hatchEst: \"\",\n      rehomed: \"\",\n      salvageable: \"\",\n      comments: {},\n      showNest: null,\n      showFpart: false,\n      hasTurtle: null,\n      hasNest: null\n    }; // const useStyles = makeStyles(theme => ({\n    //     root: {\n    //         padding: theme.spacing(3, 2),\n    //     },\n    // }));\n    // const classes = useStyles();\n  }\n\n  render() {\n    const t = this.props.t;\n    return React.createElement(React.Fragment, null, React.createElement(Paper, {\n      className: \"form\",\n      style: {\n        margin: '5%',\n        border: '9px solid #ccc'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, t('TORTUGA WATCH FORM')), React.createElement(BeachLocations, {\n      handleBeachInput: this.handleBeachInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), React.createElement(ExpansionPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(ExpansionPanelSummary, {\n      expandIcon: React.createElement(ExpandMoreIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }),\n      \"aria-controls\": \"panel1c-content\",\n      id: \"shift\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"helptext\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: \"Shift\",\n      variant: \"h6\",\n      component: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, t('Shift')))), React.createElement(ShiftInput, {\n      forms: this.state.forms,\n      handleName: this.handleName,\n      handleDate: this.handleDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    })), React.createElement(ExpansionPanel, {\n      TransitionProps: {\n        unmountOnExit: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(ExpansionPanelSummary, {\n      expandIcon: React.createElement(ExpandMoreIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }),\n      \"aria-controls\": \"panel1c-content\",\n      id: \"turtles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"helptext\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: \"turtles\",\n      variant: \"h6\",\n      component: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, t('Turtle Information')))), React.createElement(Turtle, {\n      forms: this.state.forms,\n      handleTurtInput: this.state.handleTurtInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    })), React.createElement(ExpansionPanel, {\n      TransitionProps: {\n        unmountOnExit: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(ExpansionPanelSummary, {\n      expandIcon: React.createElement(ExpandMoreIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }),\n      \"aria-controls\": \"panel1c-content\",\n      id: \"turtles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"helptext\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: \"nests\",\n      variant: \"h6\",\n      component: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, t('Nest Information')))), React.createElement(NestInput, {\n      forms: this.state.forms,\n      handleNest: this.state.handleNest,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    })), React.createElement(Comments, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"medium\",\n      className: \"submit\" // startIcon={<SaveIcon />}\n      ,\n      onClick: this.submitForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, t('Submit Form'))));\n  }\n\n}\n\nexport default withTranslation('translation')(Form);","map":{"version":3,"sources":["C:/Users/benja/Desktop/Fullstack Bootcamp/projects/Tortuga Pedasi/tortugaspedasi/tortugaspedasi/src/Components/Form/Form.js"],"names":["React","Component","ShiftInput","Turtle","NestInput","Button","withTranslation","Paper","Typography","ExpansionPanel","ExpansionPanelSummary","ExpandMoreIcon","BeachLocations","Comments","axios","require","Form","constructor","props","handleBeachInput","input","console","log","locationLatitude","state","locationLongitude","selectedBeach","setState","handleTurtInput","turtle","handleName","first","last","firstName","lastName","handleDate","date","time","handleShift","handleNest","eggCount","layTime","hatchEst","rehomed","handleLab","salvageable","checkTurtleData","formInput","exist","element","hasTurtle","checkNestData","hasNest","some","submitNewForm","shift","observation","nest","post","handleExpandClick","event","target","showFpart","comments","showNest","render","t","margin","border","forms","unmountOnExit","submitForm"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport ShiftInput from './ShiftInput';\r\nimport Turtle from './Turtle';\r\nimport NestInput from './NestInput';\r\n//import Fab from '@material-ui/core/Fab';\r\n// import SaveIcon from '@material-ui/icons/Save';\r\nimport Button from '@material-ui/core/Button';\r\nimport './form.css';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { Paper, Typography } from '@material-ui/core';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\n//import ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\n//import IconButton from '@material-ui/core/IconButton';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport BeachLocations from './BeachLocations';\r\nimport Comments from './ObservationComments';\r\n\r\nconst axios = require('axios');\r\n\r\nclass Form extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            locationLatitude: \"\",  // set-up by beach selection\r\n            locationLongitude: \"\", // set-up by beach selection\r\n            selectedBeach: \"\",\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            date: \"\",\r\n            time: \"\",\r\n            turtle: {},\r\n            eggCount: \"\",\r\n            layTime: \"\",\r\n            hatchEst: \"\",\r\n            rehomed: \"\",\r\n            salvageable: \"\",\r\n            comments: {},\r\n            showNest: null,\r\n            showFpart: false,\r\n            hasTurtle: null,\r\n            hasNest: null\r\n        }\r\n\r\n        // const useStyles = makeStyles(theme => ({\r\n        //     root: {\r\n        //         padding: theme.spacing(3, 2),\r\n        //     },\r\n        // }));\r\n        // const classes = useStyles();\r\n    }\r\n\r\n    handleBeachInput = async (input) => {\r\n        console.log(input)\r\n        let locationLatitude = { ...this.state.locationLatitude }\r\n        let locationLongitude = { ...this.state.locationLongitude }\r\n        let selectedBeach = { ...this.state.selectedBeach }\r\n        locationLatitude = input.locationLatitude\r\n        locationLongitude = input.locationLongitude\r\n        selectedBeach = input.selectedBeach\r\n        await this.setState({ locationLatitude, locationLongitude, selectedBeach })\r\n    }\r\n    handleTurtInput = async (input) => {\r\n        let turtle = { ...this.state.turtle }\r\n        turtle = input\r\n        await this.setState({ turtle })\r\n    }\r\n    handleName = async (first, last) => {\r\n        let firstName = { ...this.state.firstName }\r\n        let lastName = { ...this.state.lastName }\r\n        firstName = first\r\n        lastName = last\r\n        await this.setState({ firstName, lastName })\r\n    }\r\n    handleDate = async (first, last) => {\r\n        let date = { ...this.state.date }\r\n        let time = { ...this.state.time }\r\n        date = first\r\n        time = last\r\n        await this.setState({ date, time })\r\n    }\r\n    handleShift = async (input) => {\r\n        let firstName = { ...this.state.firstName }\r\n        let lastName = { ...this.state.lastName }\r\n        let date = { ...this.state.date }\r\n        let time = { ...this.state.time }\r\n        firstName = input.firstName\r\n        lastName = input.lastName\r\n        date = input.date\r\n        time = input.time\r\n        await this.setState({ firstName, lastName, date, time })\r\n    }\r\n    handleNest = (input) => {\r\n        let eggCount = { ...this.state.eggCount }\r\n        let layTime = { ...this.state.layTime }\r\n        let hatchEst = { ...this.state.hatchEst }\r\n        let rehomed = { ...this.state.rehomed }\r\n        eggCount = input.eggCount\r\n        layTime = input.layTime\r\n        hatchEst = input.hatchEst\r\n        rehomed = input.rehomed\r\n        this.setState({ eggCount, layTime, hatchEst, rehomed })\r\n    }\r\n    handleLab = (input) => {\r\n        let salvageable = { ...this.state.salvageable }\r\n        salvageable = input.salvageable\r\n        this.setState({ salvageable })\r\n    }\r\n\r\n    // submitForm = async (input) => {\r\n    // let idx = Object.keys\r\n    // let state = {...this.state}\r\n    // state[] = { ...this.state.locationLatitude }\r\n    // let locationLongitude = { ...this.state.locationLongitude }\r\n    // let selectedBeach = { ...this.state.selectedBeach }\r\n    // let forms = {... this.state.forms}\r\n    // let idx = Object.keys(forms).length\r\n    // // await forms[0]=inputValue\r\n    // console.log(inputValue)\r\n    // this.checkTurtleData(forms)\r\n    // // this.checkNestData(forms)\r\n    // this.setState({\r\n    //     forms\r\n    // })\r\n    // console.log(this.state.forms)\r\n\r\n\r\n    checkTurtleData = (formInput) => {\r\n        console.log(formInput)\r\n        const exist = function (element) {\r\n            return element !== null\r\n        }\r\n        let hasTurtle = { ...this.state.hasTurtle }\r\n        // hasTurtle = formInput.turtleInput.some(exist)\r\n\r\n        this.setState({\r\n            hasTurtle\r\n        })\r\n    }\r\n\r\n    checkNestData = (formInput) => {\r\n\r\n        const exist = function (element) {\r\n            return element !== null\r\n        }\r\n        let hasNest = { ...this.state.hasNest }\r\n        hasNest = formInput.NestInput.some(exist)\r\n        this.setState({\r\n            hasNest\r\n        })\r\n    }\r\n\r\n\r\n\r\n    submitNewForm = async (shift, observation, turtle, nest) => {\r\n        console.log('working')\r\n        await axios.post('http://localhost:7777/newForm', { shift, observation, turtle, nest })\r\n    }\r\n\r\n    handleExpandClick = (event) => {\r\n        console.log(event.target)\r\n        let showFpart = true\r\n        // showFpart = !showFpart\r\n        console.log(showFpart)\r\n        this.setState({ showFpart: showFpart })\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        return (\r\n            <>\r\n                <Paper className=\"form\" style={{ margin: '5%', border: '9px solid #ccc' }}>\r\n                    <h3>{t('TORTUGA WATCH FORM')}</h3>\r\n                    {/* <hr/> */}\r\n                    <BeachLocations handleBeachInput={this.handleBeachInput} />\r\n                    <br />\r\n                    <br />\r\n                    <ExpansionPanel >\r\n                        <ExpansionPanelSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel1c-content\"\r\n                            id=\"shift\"\r\n                        >\r\n                            <div className=\"helptext\">\r\n                                <Typography className=\"Shift\" variant=\"h6\" component=\"h6\">{t('Shift')}</Typography>\r\n                            </div>\r\n                        </ExpansionPanelSummary>\r\n                        <ShiftInput forms={this.state.forms} handleName={this.handleName} handleDate={this.handleDate} />\r\n                        <br />\r\n                    </ExpansionPanel>\r\n                    <ExpansionPanel TransitionProps={{ unmountOnExit: true }}>\r\n                        <ExpansionPanelSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel1c-content\"\r\n                            id=\"turtles\"\r\n                        >\r\n                            <div className=\"helptext\">\r\n                                <Typography className=\"turtles\" variant=\"h6\" component=\"h6\">{t('Turtle Information')}</Typography>\r\n                            </div>\r\n                        </ExpansionPanelSummary>\r\n                        <Turtle forms={this.state.forms} handleTurtInput={this.state.handleTurtInput} />\r\n                    </ExpansionPanel>\r\n                    <ExpansionPanel TransitionProps={{ unmountOnExit: true }}>\r\n                        <ExpansionPanelSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel1c-content\"\r\n                            id=\"turtles\"\r\n                        >\r\n                            <div className=\"helptext\">\r\n                                <Typography className=\"nests\" variant=\"h6\" component=\"h6\">{t('Nest Information')}</Typography>\r\n                            </div>\r\n                        </ExpansionPanelSummary>\r\n                        <NestInput forms={this.state.forms} handleNest={this.state.handleNest} />\r\n                    </ExpansionPanel>\r\n                    <Comments />\r\n                    <Button\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        size=\"medium\"\r\n                        className=\"submit\"\r\n                        // startIcon={<SaveIcon />}\r\n                        onClick={this.submitForm}\r\n                    >\r\n                        {t('Submit Form')}\r\n                    </Button>\r\n                </Paper>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n    export default withTranslation('translation')(Form);"]},"metadata":{},"sourceType":"module"}