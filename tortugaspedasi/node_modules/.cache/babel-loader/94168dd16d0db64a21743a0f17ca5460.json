{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\benja\\\\Desktop\\\\Fullstack Bootcamp\\\\projects\\\\Tortuga Pedasi\\\\tortugaspedasi\\\\tortugaspedasi\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\benja\\\\Desktop\\\\Fullstack Bootcamp\\\\projects\\\\Tortuga Pedasi\\\\tortugaspedasi\\\\tortugaspedasi\\\\src\\\\Components\\\\Form\\\\Form.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react'; // import { makeStyles } from '@material-ui/core/styles';\n\nimport ShiftInput from './ShiftInput';\nimport Turtle from './Turtle';\nimport NestInput from './NestInput'; //import Fab from '@material-ui/core/Fab';\n// import SaveIcon from '@material-ui/icons/Save';\n\nimport Button from '@material-ui/core/Button';\nimport './form.css';\nimport { withTranslation } from 'react-i18next';\nimport { Typography } from '@material-ui/core';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary'; //import ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\n//import IconButton from '@material-ui/core/IconButton';\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport BeachLocations from './BeachLocations';\nimport Comments from './ObservationComments';\n\nconst axios = require('axios');\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleBeachInput = async input => {\n      console.log(input);\n\n      let locationLatitude = _objectSpread({}, this.state.locationLatitude);\n\n      let locationLongitude = _objectSpread({}, this.state.locationLongitude);\n\n      let selectedBeach = _objectSpread({}, this.state.selectedBeach);\n\n      locationLatitude = input.locationLatitude;\n      locationLongitude = input.locationLongitude;\n      selectedBeach = input.selectedBeach;\n      await this.setState({\n        locationLatitude,\n        locationLongitude,\n        selectedBeach\n      });\n    };\n\n    this.handleSpecies = async input => {\n      let species = _objectSpread({}, this.state.species);\n\n      species = input;\n      await this.setState({\n        species\n      });\n    };\n\n    this.handleCondition = async input => {\n      let conditionstage = _objectSpread({}, this.state.conditionstage);\n\n      conditionstage = input;\n      await this.setState({\n        conditionstage\n      });\n    };\n\n    this.handleName = async (first, last) => {\n      let firstName = _objectSpread({}, this.state.firstName);\n\n      let lastName = _objectSpread({}, this.state.lastName);\n\n      firstName = first;\n      lastName = last;\n      await this.setState({\n        firstName,\n        lastName\n      });\n    };\n\n    this.handleDimentions = async (id, value) => {\n      console.log(id, value);\n      let key = id; // let index = Object.keys(key)[0]\n      // console.log(index)\n      // let propert = { ...this.state[index]}\n      // let value = Object.values(key)[0]\n      // console.log(state)\n      // propert = value\n\n      await this.setState({\n        [key]: value\n      }); // console.log(state)\n    };\n\n    this.handleDate = async (first, last) => {\n      let date = _objectSpread({}, this.state.date);\n\n      let time = _objectSpread({}, this.state.time);\n\n      date = first;\n      time = last;\n      await this.setState({\n        date,\n        time\n      });\n    };\n\n    this.handleShift = async input => {\n      let firstName = _objectSpread({}, this.state.firstName);\n\n      let lastName = _objectSpread({}, this.state.lastName);\n\n      let date = _objectSpread({}, this.state.date);\n\n      let time = _objectSpread({}, this.state.time);\n\n      firstName = input.firstName;\n      lastName = input.lastName;\n      date = input.date;\n      time = input.time;\n      await this.setState({\n        firstName,\n        lastName,\n        date,\n        time\n      });\n    };\n\n    this.handleNest = async input => {\n      console.log(input);\n\n      let eggCount = _objectSpread({}, this.state.eggCount);\n\n      let layTime = _objectSpread({}, this.state.layTime);\n\n      let hatchEst = _objectSpread({}, this.state.hatchEst);\n\n      let rehomed = _objectSpread({}, this.state.rehomed);\n\n      let salvageable = _objectSpread({}, this.state.salvageable);\n\n      eggCount = input.eggCount;\n      layTime = input.layTime;\n      hatchEst = input.hatchEst;\n      rehomed = input.rehomed;\n      salvageable = input.salvageable;\n      await this.setState({\n        eggCount,\n        layTime,\n        hatchEst,\n        rehomed,\n        salvageable\n      });\n    };\n\n    this.handleLab = input => {\n      let salvageable = _objectSpread({}, this.state.salvageable);\n\n      salvageable = input.salvageable;\n      this.setState({\n        salvageable\n      });\n    };\n\n    this.submitForm = async input => {// let idx = Object.keys\n      // let state = {...this.state}\n      // state[] = { ...this.state.locationLatitude }\n      // let locationLongitude = { ...this.state.locationLongitude }\n      // let selectedBeach = { ...this.state.selectedBeach }\n      // let forms = {... this.state.forms}\n      // let idx = Object.keys(forms).length\n      // // await forms[0]=inputValue\n      // console.log(inputValue)\n      // this.checkTurtleData(forms)\n      // // this.checkNestData(forms)\n      // this.setState({\n      //     forms\n      // })\n      // console.log(this.state.forms)\n    };\n\n    this.checkTurtleData = formInput => {\n      console.log(formInput);\n\n      const exist = function (element) {\n        return element !== null;\n      };\n\n      let hasTurtle = _objectSpread({}, this.state.hasTurtle); // hasTurtle = formInput.turtleInput.some(exist)\n\n\n      this.setState({\n        hasTurtle\n      });\n    };\n\n    this.checkNestData = formInput => {\n      const exist = function (element) {\n        return element !== null;\n      };\n\n      let hasNest = _objectSpread({}, this.state.hasNest);\n\n      hasNest = formInput.NestInput.some(exist);\n      this.setState({\n        hasNest\n      });\n    };\n\n    this.handleGender = input => {\n      let gender = _objectSpread({}, this.state.gender);\n\n      gender = input;\n      this.setState({\n        gender\n      });\n    };\n\n    this.handleComments = input => {\n      let comments = _objectSpread({}, this.state.comments);\n\n      comments = input;\n      this.setState({\n        comments\n      });\n    };\n\n    this.submitNewForm = async (shift, observation, turtle, nest) => {\n      console.log('working');\n      await axios.post('http://localhost:7777/newForm', {\n        shift,\n        observation,\n        turtle,\n        nest\n      });\n    };\n\n    this.handleExpandClick = event => {\n      console.log(event.target);\n      let showFpart = true; // showFpart = !showFpart\n\n      console.log(showFpart);\n      this.setState({\n        showFpart: showFpart\n      });\n    };\n\n    this.state = {\n      locationLatitude: \"\",\n      // set-up by beach selection\n      locationLongitude: \"\",\n      // set-up by beach selection\n      selectedBeach: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      date: \"\",\n      time: \"\",\n      species: \"\",\n      gender: null,\n      conditionstat: \"\",\n      conditionstage: \"\",\n      dimensionsPl: \"\",\n      dimensionsPw: \"\",\n      dimensionsCl: \"\",\n      dimensionsCw: \"\",\n      markingsRs: \"\",\n      markingsLs: \"\",\n      eggCount: \"\",\n      layTime: \"\",\n      hatchEst: \"\",\n      rehomed: \"\",\n      salvageable: \"\",\n      comments: {},\n      showNest: null,\n      showFpart: false,\n      hasTurtle: null,\n      hasNest: null,\n      eggCount: \"\",\n      layTime: \"\",\n      hatchEst: \"\",\n      rehomed: \"\",\n      salvageable: \"\"\n    }; // const useStyles = makeStyles(theme => ({\n    //     root: {\n    //         padding: theme.spacing(3, 2),\n    //     },\n    // }));\n    // const classes = useStyles();\n  }\n\n  render() {\n    const t = this.props.t;\n    return React.createElement(\"div\", {\n      id: \"formContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, t('TORTUGA WATCH FORM')), React.createElement(\"div\", {\n      id: \"beachButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, React.createElement(BeachLocations, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }), React.createElement(ExpansionPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(ExpansionPanelSummary, {\n      expandIcon: React.createElement(ExpandMoreIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }),\n      \"aria-controls\": \"panel1c-content\",\n      id: \"shift\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"helptext\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: \"Shift\",\n      variant: \"h6\",\n      component: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, t('Shift')))), React.createElement(ShiftInput, {\n      forms: this.state.forms,\n      handleName: this.handleName,\n      handleDate: this.handleDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    })), React.createElement(ExpansionPanel, {\n      TransitionProps: {\n        unmountOnExit: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(ExpansionPanelSummary, {\n      expandIcon: React.createElement(ExpandMoreIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }),\n      \"aria-controls\": \"panel1c-content\",\n      id: \"turtles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"helptext\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: \"turtles\",\n      variant: \"h6\",\n      component: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, t('Turtle Information')))), React.createElement(Turtle, {\n      handleGender: this.handleGender,\n      handleCondition: this.handleCondition,\n      handleSpecies: this.handleSpecies,\n      forms: this.state.forms,\n      handleTurtInput: this.state.handleTurtInput,\n      handleDimentions: this.handleDimentions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    })), React.createElement(ExpansionPanel, {\n      TransitionProps: {\n        unmountOnExit: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(ExpansionPanelSummary, {\n      expandIcon: React.createElement(ExpandMoreIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }),\n      \"aria-controls\": \"panel1c-content\",\n      id: \"turtles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"helptext\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: \"nests\",\n      variant: \"h6\",\n      component: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265\n      },\n      __self: this\n    }, t('Nest Information')))), React.createElement(NestInput, {\n      forms: this.state.forms,\n      handleNest: this.handleNest,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    })), React.createElement(Comments, {\n      handleComments: this.handleComments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"medium\",\n      className: \"submit\" // startIcon={<SaveIcon />}\n      ,\n      onClick: this.submitNewForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, t('Submit Form')));\n  }\n\n}\n\nexport default withTranslation('translation')(Form);","map":{"version":3,"sources":["C:/Users/benja/Desktop/Fullstack Bootcamp/projects/Tortuga Pedasi/tortugaspedasi/tortugaspedasi/src/Components/Form/Form.js"],"names":["React","Component","ShiftInput","Turtle","NestInput","Button","withTranslation","Typography","ExpansionPanel","ExpansionPanelSummary","ExpandMoreIcon","BeachLocations","Comments","axios","require","Form","constructor","props","handleBeachInput","input","console","log","locationLatitude","state","locationLongitude","selectedBeach","setState","handleSpecies","species","handleCondition","conditionstage","handleName","first","last","firstName","lastName","handleDimentions","id","value","key","handleDate","date","time","handleShift","handleNest","eggCount","layTime","hatchEst","rehomed","salvageable","handleLab","submitForm","checkTurtleData","formInput","exist","element","hasTurtle","checkNestData","hasNest","some","handleGender","gender","handleComments","comments","submitNewForm","shift","observation","turtle","nest","post","handleExpandClick","event","target","showFpart","conditionstat","dimensionsPl","dimensionsPw","dimensionsCl","dimensionsCw","markingsRs","markingsLs","showNest","render","t","forms","unmountOnExit","handleTurtInput"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport ShiftInput from './ShiftInput';\r\nimport Turtle from './Turtle';\r\nimport NestInput from './NestInput';\r\n//import Fab from '@material-ui/core/Fab';\r\n// import SaveIcon from '@material-ui/icons/Save';\r\nimport Button from '@material-ui/core/Button';\r\nimport './form.css';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { Typography } from '@material-ui/core';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\n//import ExpansionPanelActions from '@material-ui/core/ExpansionPanelActions';\r\n//import IconButton from '@material-ui/core/IconButton';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport BeachLocations from './BeachLocations';\r\nimport Comments from './ObservationComments';\r\nconst axios = require('axios');\r\n\r\n\r\nclass Form extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            locationLatitude: \"\",  // set-up by beach selection\r\n            locationLongitude: \"\", // set-up by beach selection\r\n            selectedBeach: \"\",\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            date: \"\",\r\n            time: \"\",\r\n            species: \"\",\r\n            gender: null,\r\n            conditionstat: \"\",\r\n            conditionstage: \"\",\r\n            dimensionsPl: \"\",\r\n            dimensionsPw: \"\",\r\n            dimensionsCl: \"\",\r\n            dimensionsCw: \"\",\r\n            markingsRs: \"\",\r\n            markingsLs: \"\",\r\n            eggCount: \"\",\r\n            layTime: \"\",\r\n            hatchEst: \"\",\r\n            rehomed: \"\",\r\n            salvageable: \"\",\r\n            comments: {},\r\n            showNest: null,\r\n            showFpart: false,\r\n            hasTurtle: null,\r\n            hasNest: null,\r\n            eggCount: \"\",\r\n            layTime: \"\",\r\n            hatchEst: \"\",\r\n            rehomed: \"\",\r\n            salvageable: \"\"\r\n        }\r\n\r\n        // const useStyles = makeStyles(theme => ({\r\n        //     root: {\r\n        //         padding: theme.spacing(3, 2),\r\n        //     },\r\n        // }));\r\n        // const classes = useStyles();\r\n    }\r\n\r\n    handleBeachInput = async (input) => {\r\n        console.log(input)\r\n        let locationLatitude = { ...this.state.locationLatitude }\r\n        let locationLongitude = { ...this.state.locationLongitude }\r\n        let selectedBeach = { ...this.state.selectedBeach }\r\n        locationLatitude = input.locationLatitude\r\n        locationLongitude = input.locationLongitude\r\n        selectedBeach = input.selectedBeach\r\n        await this.setState({ locationLatitude, locationLongitude, selectedBeach })\r\n    }\r\n    handleSpecies = async (input) => {\r\n        let species = { ...this.state.species }\r\n        species = input\r\n        await this.setState({ species })\r\n    }\r\n    handleCondition = async (input) => {\r\n        let conditionstage = { ...this.state.conditionstage }\r\n        conditionstage = input\r\n        await this.setState({ conditionstage })\r\n    }\r\n    handleName = async (first, last) => {\r\n        let firstName = { ...this.state.firstName }\r\n        let lastName = { ...this.state.lastName }\r\n        firstName = first\r\n        lastName = last\r\n        await this.setState({ firstName, lastName })\r\n    }\r\n\r\n    handleDimentions = async (id, value) => {\r\n        console.log(id , value)\r\n        let key = id\r\n        \r\n        // let index = Object.keys(key)[0]\r\n        // console.log(index)\r\n        // let propert = { ...this.state[index]}\r\n        // let value = Object.values(key)[0]\r\n        // console.log(state)\r\n        // propert = value\r\n        await this.setState({ [key] : value })\r\n        // console.log(state)\r\n    }\r\n\r\n\r\n\r\n    handleDate = async (first, last) => {\r\n        let date = { ...this.state.date }\r\n        let time = { ...this.state.time }\r\n        date = first\r\n        time = last\r\n        await this.setState({ date, time })\r\n    }\r\n    handleShift = async (input) => {\r\n        let firstName = { ...this.state.firstName }\r\n        let lastName = { ...this.state.lastName }\r\n        let date = { ...this.state.date }\r\n        let time = { ...this.state.time }\r\n        firstName = input.firstName\r\n        lastName = input.lastName\r\n        date = input.date\r\n        time = input.time\r\n        await this.setState({ firstName, lastName, date, time })\r\n    }\r\n    handleNest = async (input) => {\r\n        console.log(input)\r\n        let eggCount = { ...this.state.eggCount }\r\n        let layTime = { ...this.state.layTime }\r\n        let hatchEst = { ...this.state.hatchEst }\r\n        let rehomed = { ...this.state.rehomed }\r\n        let salvageable = { ...this.state.salvageable }\r\n        eggCount = input.eggCount\r\n        layTime = input.layTime\r\n        hatchEst = input.hatchEst\r\n        rehomed = input.rehomed\r\n        salvageable = input.salvageable\r\n        await this.setState({ eggCount, layTime, hatchEst, rehomed, salvageable })\r\n    }\r\n    handleLab = (input) => {\r\n        let salvageable = { ...this.state.salvageable }\r\n        salvageable = input.salvageable\r\n        this.setState({ salvageable })\r\n    }\r\n\r\n    submitForm = async (input) => {\r\n        // let idx = Object.keys\r\n        // let state = {...this.state}\r\n        // state[] = { ...this.state.locationLatitude }\r\n        // let locationLongitude = { ...this.state.locationLongitude }\r\n        // let selectedBeach = { ...this.state.selectedBeach }\r\n        // let forms = {... this.state.forms}\r\n        // let idx = Object.keys(forms).length\r\n        // // await forms[0]=inputValue\r\n        // console.log(inputValue)\r\n        // this.checkTurtleData(forms)\r\n        // // this.checkNestData(forms)\r\n        // this.setState({\r\n        //     forms\r\n        // })\r\n        // console.log(this.state.forms)\r\n    }\r\n\r\n    checkTurtleData = (formInput) => {\r\n        console.log(formInput)\r\n        const exist = function (element) {\r\n            return element !== null\r\n        }\r\n        let hasTurtle = { ...this.state.hasTurtle }\r\n        // hasTurtle = formInput.turtleInput.some(exist)\r\n\r\n        this.setState({\r\n            hasTurtle\r\n        })\r\n    }\r\n\r\n    checkNestData = (formInput) => {\r\n\r\n        const exist = function (element) {\r\n            return element !== null\r\n        }\r\n        let hasNest = { ...this.state.hasNest }\r\n        hasNest = formInput.NestInput.some(exist)\r\n        this.setState({\r\n            hasNest\r\n        })\r\n    }\r\n\r\n    handleGender = (input) => {\r\n        let gender = { ...this.state.gender }\r\n        gender = input\r\n        this.setState({\r\n            gender\r\n        })\r\n    }\r\n\r\n    handleComments = (input) => { \r\n        let comments = {...this.state.comments}\r\n        comments = input\r\n        this.setState({\r\n            comments\r\n        })\r\n    }\r\n\r\n    submitNewForm = async (shift, observation, turtle, nest) => {\r\n        console.log('working')\r\n        await axios.post('http://localhost:7777/newForm', { shift, observation, turtle, nest })\r\n    }\r\n    handleExpandClick = (event) => {\r\n        console.log(event.target)\r\n        let showFpart = true\r\n        // showFpart = !showFpart\r\n        console.log(showFpart)\r\n        this.setState({ showFpart: showFpart })\r\n    }\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n        return (\r\n\r\n            <div id=\"formContainer\" >\r\n                <h1>{t('TORTUGA WATCH FORM')}</h1>\r\n                <div id=\"beachButton\" >\r\n                    <BeachLocations />\r\n                </div>\r\n                <br />\r\n                <br />\r\n                <ExpansionPanel >\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1c-content\"\r\n                        id=\"shift\"\r\n                    >\r\n                        <div className=\"helptext\">\r\n                            <Typography className=\"Shift\" variant=\"h6\" component=\"h6\">{t('Shift')}</Typography>\r\n                        </div>\r\n                    </ExpansionPanelSummary>\r\n                    <ShiftInput forms={this.state.forms} handleName={this.handleName} handleDate={this.handleDate} />\r\n                    <br />\r\n                </ExpansionPanel>\r\n                <ExpansionPanel TransitionProps={{ unmountOnExit: true }}>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1c-content\"\r\n                        id=\"turtles\"\r\n                    >\r\n                        <div className=\"helptext\">\r\n                            <Typography className=\"turtles\" variant=\"h6\" component=\"h6\">{t('Turtle Information')}</Typography>\r\n                        </div>\r\n                    </ExpansionPanelSummary>\r\n                    <Turtle handleGender={this.handleGender} handleCondition={this.handleCondition} handleSpecies={this.handleSpecies} forms={this.state.forms} handleTurtInput={this.state.handleTurtInput}\r\n                        handleDimentions={this.handleDimentions} />\r\n                </ExpansionPanel>\r\n                <ExpansionPanel TransitionProps={{ unmountOnExit: true }}>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1c-content\"\r\n                        id=\"turtles\"\r\n                    >\r\n                        <div className=\"helptext\">\r\n                            <Typography className=\"nests\" variant=\"h6\" component=\"h6\">{t('Nest Information')}</Typography>\r\n                        </div>\r\n                    </ExpansionPanelSummary>\r\n                    <NestInput forms={this.state.forms} handleNest={this.handleNest} />\r\n                </ExpansionPanel>\r\n                <Comments handleComments = {this.handleComments} />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    size=\"medium\"\r\n                    className=\"submit\"\r\n                    // startIcon={<SaveIcon />}\r\n                    onClick={this.submitNewForm}\r\n                >\r\n                    {t('Submit Form')}\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withTranslation('translation')(Form);"]},"metadata":{},"sourceType":"module"}