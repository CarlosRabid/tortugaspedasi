{"ast":null,"code":"import { createElement, useEffect, useLayoutEffect, useRef, Fragment, createContext } from 'react';\nimport { node, bool, object, func } from 'prop-types';\nimport clsx from 'clsx';\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutProperties from '@babel/runtime/helpers/esm/objectWithoutProperties';\nimport { makeStyles, withStyles, createStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Dialog from '@material-ui/core/Dialog';\nimport Popover from '@material-ui/core/Popover';\n/** Use it instead of .includes method for IE support */\n\nfunction arrayIncludes(array, itemOrItems) {\n  if (Array.isArray(itemOrItems)) {\n    return itemOrItems.every(function (item) {\n      return array.indexOf(item) !== -1;\n    });\n  }\n\n  return array.indexOf(itemOrItems) !== -1;\n}\n\nvar DIALOG_WIDTH = 310;\nvar DIALOG_WIDTH_WIDER = 325;\nvar VIEW_HEIGHT = 305;\nvar useStyles = makeStyles(function (theme) {\n  return {\n    staticWrapperRoot: {\n      overflow: 'hidden',\n      minWidth: DIALOG_WIDTH,\n      display: 'flex',\n      flexDirection: 'column',\n      backgroundColor: theme.palette.background.paper\n    }\n  };\n}, {\n  name: 'MuiPickersStaticWrapper'\n});\n\nvar StaticWrapper = function StaticWrapper(_ref) {\n  var children = _ref.children;\n  var classes = useStyles();\n  return createElement(\"div\", {\n    className: classes.staticWrapperRoot,\n    children: children\n  });\n};\n\nvar ModalDialog = function ModalDialog(_ref) {\n  var children = _ref.children,\n      classes = _ref.classes,\n      onAccept = _ref.onAccept,\n      onDismiss = _ref.onDismiss,\n      onClear = _ref.onClear,\n      onSetToday = _ref.onSetToday,\n      okLabel = _ref.okLabel,\n      cancelLabel = _ref.cancelLabel,\n      clearLabel = _ref.clearLabel,\n      todayLabel = _ref.todayLabel,\n      clearable = _ref.clearable,\n      showTodayButton = _ref.showTodayButton,\n      showTabs = _ref.showTabs,\n      wider = _ref.wider,\n      other = _objectWithoutProperties(_ref, [\"children\", \"classes\", \"onAccept\", \"onDismiss\", \"onClear\", \"onSetToday\", \"okLabel\", \"cancelLabel\", \"clearLabel\", \"todayLabel\", \"clearable\", \"showTodayButton\", \"showTabs\", \"wider\"]);\n\n  return createElement(Dialog, _extends({\n    role: \"dialog\",\n    onClose: onDismiss,\n    classes: {\n      paper: clsx(classes.dialogRoot, wider && classes.dialogRootWider)\n    }\n  }, other), createElement(DialogContent, {\n    children: children,\n    className: classes.dialog\n  }), createElement(DialogActions, {\n    classes: {\n      root: clsx((clearable || showTodayButton) && classes.withAdditionalAction)\n    }\n  }, clearable && createElement(Button, {\n    color: \"primary\",\n    onClick: onClear\n  }, clearLabel), showTodayButton && createElement(Button, {\n    color: \"primary\",\n    onClick: onSetToday\n  }, todayLabel), cancelLabel && createElement(Button, {\n    color: \"primary\",\n    onClick: onDismiss\n  }, cancelLabel), okLabel && createElement(Button, {\n    color: \"primary\",\n    onClick: onAccept\n  }, okLabel)));\n};\n\nModalDialog.displayName = 'ModalDialog';\nvar styles = createStyles({\n  dialogRoot: {\n    minWidth: DIALOG_WIDTH\n  },\n  dialogRootWider: {\n    minWidth: DIALOG_WIDTH_WIDER\n  },\n  dialog: {\n    '&:first-child': {\n      padding: 0\n    }\n  },\n  withAdditionalAction: {\n    // set justifyContent to default value to fix IE11 layout bug\n    // see https://github.com/dmtrKovalenko/material-ui-pickers/pull/267\n    justifyContent: 'flex-start',\n    '& > *:first-child': {\n      marginRight: 'auto'\n    }\n  }\n});\nvar ModalDialog$1 = withStyles(styles, {\n  name: 'MuiPickersModal'\n})(ModalDialog);\nvar useIsomorphicEffect = typeof window === 'undefined' ? useEffect : useLayoutEffect;\n\nfunction runKeyHandler(e, keyHandlers) {\n  var handler = keyHandlers[e.key];\n\n  if (handler) {\n    handler(); // if event was handled prevent other side effects (e.g. page scroll)\n\n    e.preventDefault();\n  }\n}\n\nfunction useKeyDown(active, keyHandlers) {\n  var keyHandlersRef = useRef(keyHandlers);\n  keyHandlersRef.current = keyHandlers;\n  useIsomorphicEffect(function () {\n    if (active) {\n      var handleKeyDown = function handleKeyDown(event) {\n        runKeyHandler(event, keyHandlersRef.current);\n      };\n\n      window.addEventListener('keydown', handleKeyDown);\n      return function () {\n        window.removeEventListener('keydown', handleKeyDown);\n      };\n    }\n  }, [active]);\n}\n\nvar ModalWrapper = function ModalWrapper(_ref) {\n  var open = _ref.open,\n      children = _ref.children,\n      okLabel = _ref.okLabel,\n      cancelLabel = _ref.cancelLabel,\n      clearLabel = _ref.clearLabel,\n      todayLabel = _ref.todayLabel,\n      showTodayButton = _ref.showTodayButton,\n      clearable = _ref.clearable,\n      DialogProps = _ref.DialogProps,\n      showTabs = _ref.showTabs,\n      wider = _ref.wider,\n      InputComponent = _ref.InputComponent,\n      DateInputProps = _ref.DateInputProps,\n      onClear = _ref.onClear,\n      onAccept = _ref.onAccept,\n      onDismiss = _ref.onDismiss,\n      onSetToday = _ref.onSetToday,\n      other = _objectWithoutProperties(_ref, [\"open\", \"children\", \"okLabel\", \"cancelLabel\", \"clearLabel\", \"todayLabel\", \"showTodayButton\", \"clearable\", \"DialogProps\", \"showTabs\", \"wider\", \"InputComponent\", \"DateInputProps\", \"onClear\", \"onAccept\", \"onDismiss\", \"onSetToday\"]);\n\n  useKeyDown(open, {\n    Enter: onAccept\n  });\n  return createElement(Fragment, null, createElement(InputComponent, _extends({}, other, DateInputProps)), createElement(ModalDialog$1, _extends({\n    wider: wider,\n    showTabs: showTabs,\n    open: open,\n    onClear: onClear,\n    onAccept: onAccept,\n    onDismiss: onDismiss,\n    onSetToday: onSetToday,\n    clearLabel: clearLabel,\n    todayLabel: todayLabel,\n    okLabel: okLabel,\n    cancelLabel: cancelLabel,\n    clearable: clearable,\n    showTodayButton: showTodayButton,\n    children: children\n  }, DialogProps)));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? ModalWrapper.propTypes = {\n  okLabel: node,\n  cancelLabel: node,\n  clearLabel: node,\n  clearable: bool,\n  todayLabel: node,\n  showTodayButton: bool,\n  DialogProps: object\n} : void 0;\nModalWrapper.defaultProps = {\n  okLabel: 'OK',\n  cancelLabel: 'Cancel',\n  clearLabel: 'Clear',\n  todayLabel: 'Today',\n  clearable: false,\n  showTodayButton: false\n};\n\nvar InlineWrapper = function InlineWrapper(_ref) {\n  var open = _ref.open,\n      wider = _ref.wider,\n      children = _ref.children,\n      PopoverProps = _ref.PopoverProps,\n      onClear = _ref.onClear,\n      onDismiss = _ref.onDismiss,\n      onSetToday = _ref.onSetToday,\n      onAccept = _ref.onAccept,\n      showTabs = _ref.showTabs,\n      DateInputProps = _ref.DateInputProps,\n      InputComponent = _ref.InputComponent,\n      other = _objectWithoutProperties(_ref, [\"open\", \"wider\", \"children\", \"PopoverProps\", \"onClear\", \"onDismiss\", \"onSetToday\", \"onAccept\", \"showTabs\", \"DateInputProps\", \"InputComponent\"]);\n\n  var ref = useRef();\n  useKeyDown(open, {\n    Enter: onAccept\n  });\n  return createElement(Fragment, null, createElement(InputComponent, _extends({}, other, DateInputProps, {\n    inputRef: ref\n  })), createElement(Popover, _extends({\n    open: open,\n    onClose: onDismiss,\n    anchorEl: ref.current,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'center'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'center'\n    },\n    children: children\n  }, PopoverProps)));\n};\n\nprocess.env.NODE_ENV !== \"production\" ? InlineWrapper.propTypes = {\n  onOpen: func,\n  onClose: func,\n  PopoverProps: object\n} : void 0;\n\nfunction getWrapperFromVariant(variant) {\n  switch (variant) {\n    case 'inline':\n      return InlineWrapper;\n\n    case 'static':\n      return StaticWrapper;\n\n    default:\n      return ModalWrapper;\n  }\n}\n\nvar VariantContext = createContext(null);\n\nvar Wrapper = function Wrapper(_ref) {\n  var variant = _ref.variant,\n      props = _objectWithoutProperties(_ref, [\"variant\"]);\n\n  var Component = getWrapperFromVariant(variant);\n  return createElement(VariantContext.Provider, {\n    value: variant || 'dialog'\n  }, createElement(Component, props));\n};\n\nexport { DIALOG_WIDTH as D, VariantContext as V, Wrapper as W, arrayIncludes as a, VIEW_HEIGHT as b, DIALOG_WIDTH_WIDER as c, runKeyHandler as r, useIsomorphicEffect as u };","map":null,"metadata":{},"sourceType":"module"}