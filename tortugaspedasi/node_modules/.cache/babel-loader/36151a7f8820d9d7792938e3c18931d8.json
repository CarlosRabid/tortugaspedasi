{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\benja\\\\Desktop\\\\Fullstack Bootcamp\\\\projects\\\\Tortuga Pedasi\\\\tortugaspedasi\\\\tortugaspedasi\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\benja\\\\Desktop\\\\Fullstack Bootcamp\\\\projects\\\\Tortuga Pedasi\\\\tortugaspedasi\\\\tortugaspedasi\\\\src\\\\Components\\\\Form\\\\Form.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport ShiftInput from './ShiftInput';\nimport Turtle from './Turtle';\nimport NestInput from './NestInput';\nimport Button from '@material-ui/core/Button';\nimport './form.css';\nimport { withTranslation } from 'react-i18next';\nimport { Typography } from '@material-ui/core';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport BeachLocations from './BeachLocations';\nimport Comments from './ObservationComments';\nimport { Redirect } from 'react-router-dom';\nimport { green } from '@material-ui/core/colors';\n\nconst axios = require('axios');\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleBeachInput = async input => {\n      console.log(input);\n\n      let locationLatitude = _objectSpread({}, this.state.locationLatitude);\n\n      let locationLongitude = _objectSpread({}, this.state.locationLongitude);\n\n      let selectedBeach = _objectSpread({}, this.state.selectedBeach);\n\n      locationLatitude = input.locationLatitude;\n      locationLongitude = input.locationLongitude;\n      selectedBeach = input.selectedBeach;\n      await this.setState({\n        locationLatitude,\n        locationLongitude,\n        selectedBeach\n      });\n    };\n\n    this.handleSpecies = async input => {\n      let species = _objectSpread({}, this.state.species);\n\n      species = input;\n      await this.setState({\n        species\n      });\n    };\n\n    this.handleCondition = async input => {\n      let conditionstage = _objectSpread({}, this.state.conditionstage);\n\n      let conditionstat = _objectSpread({}, this.state.conditionstat);\n\n      conditionstage = input;\n      console.log(conditionstage, input);\n      conditionstat = input.charAt(0) == \"a\" ? 'Alive' : 'Death';\n      await this.setState({\n        conditionstage,\n        conditionstat\n      });\n    };\n\n    this.handleName = async (first, last) => {\n      let firstName = _objectSpread({}, this.state.firstName);\n\n      let lastName = _objectSpread({}, this.state.lastName);\n\n      firstName = first;\n      lastName = last;\n      await this.setState({\n        firstName,\n        lastName\n      });\n      localStorage.setItem('firstName', this.state.firstName);\n      localStorage.setItem('lastName', this.state.lastName);\n    };\n\n    this.handleDimentions = async (id, value) => {\n      console.log(id, value);\n      let key = id; // let index = Object.keys(key)[0]\n      // console.log(index)\n      // let propert = { ...this.state[index]}\n      // let value = Object.values(key)[0]\n      // console.log(state)\n      // propert = value\n\n      await this.setState({\n        [key]: value\n      }); // console.log(state)\n    };\n\n    this.handleDate = async (first, last) => {\n      let date = _objectSpread({}, this.state.date);\n\n      let time = _objectSpread({}, this.state.time);\n\n      date = first;\n      time = last;\n      await this.setState({\n        date,\n        time\n      });\n    };\n\n    this.handleShift = async input => {\n      let firstName = _objectSpread({}, this.state.firstName);\n\n      let lastName = _objectSpread({}, this.state.lastName);\n\n      let date = _objectSpread({}, this.state.date);\n\n      let time = _objectSpread({}, this.state.time);\n\n      firstName = input.firstName;\n      lastName = input.lastName;\n      date = input.date;\n      time = input.time;\n      await this.setState({\n        firstName,\n        lastName,\n        date,\n        time\n      });\n    };\n\n    this.handleNest = async input => {\n      console.log(input);\n\n      let eggCount = _objectSpread({}, this.state.eggCount);\n\n      let layTime = _objectSpread({}, this.state.layTime);\n\n      let hatchEst = _objectSpread({}, this.state.hatchEst);\n\n      let rehomed = _objectSpread({}, this.state.rehomed);\n\n      let salvageable = _objectSpread({}, this.state.salvageable);\n\n      let daten = _objectSpread({}, this.state.daten);\n\n      let timen = _objectSpread({}, this.state.timen);\n\n      eggCount = input.eggCount;\n      layTime = input.layTime;\n      hatchEst = input.hatchEst;\n      rehomed = input.rehomed;\n      salvageable = input.salvageable;\n      daten = input.daten;\n      timen = input.timen;\n      await this.setState({\n        eggCount,\n        layTime,\n        hatchEst,\n        rehomed,\n        salvageable,\n        daten,\n        timen\n      });\n    };\n\n    this.handleLab = input => {\n      let salvageable = _objectSpread({}, this.state.salvageable);\n\n      salvageable = input.salvageable;\n      this.setState({\n        salvageable\n      });\n    };\n\n    this.checkTurtleData = () => {\n      let hasTurtle = _objectSpread({}, this.state.hasTurtle);\n\n      let turtle = {\n        species: this.state.species,\n        gender: this.state.gender,\n        conditionstat: this.state.conditionstat,\n        conditionstage: this.state.conditionstage,\n        dimensionsPl: this.state.dimensionsPl,\n        dimensionsPw: this.state.dimensionsPw,\n        dimensionsCl: this.state.dimensionsCl,\n        dimensionsCw: this.state.dimensionsCw,\n        markingsRs: this.state.markingsRs,\n        markingsLs: this.state.markingsLs\n      };\n      hasTurtle = Object.keys(turtle).some(function (k) {\n        return turtle[k] !== null;\n      }); // console.log(hasTurtle)\n      // hasTurtle = formInput.turtleInput.some(exist)\n\n      this.setState({\n        hasTurtle\n      });\n    };\n\n    this.checkNest = () => {\n      let hasNest = _objectSpread({}, this.state.hasNest);\n\n      let nest = {\n        eggCount: this.state.eggCount,\n        layTime: this.state.layTime,\n        hatchEst: this.state.hatchEst,\n        rehomed: this.state.rehomed,\n        salvageable: this.state.salvageable,\n        layTime: this.state.daten\n      };\n      hasNest = Object.keys(nest).some(function (k) {\n        return nest[k] !== null;\n      }); // console.log(hasTurtle)\n      // hasTurtle = formInput.turtleInput.some(exist)\n\n      this.setState({\n        hasNest\n      });\n    };\n\n    this.handleGender = input => {\n      let gender = _objectSpread({}, this.state.gender);\n\n      gender = input;\n      this.setState({\n        gender\n      });\n    };\n\n    this.handleComments = input => {\n      let comments = _objectSpread({}, this.state.comments);\n\n      comments = input;\n      this.setState({\n        comments\n      });\n    };\n\n    this.submitNewForm = async (shift, observation, turtle, nest) => {\n      await this.checkTurtleData();\n      await this.checkNest();\n      let form = {\n        shift: {\n          firstName: this.state.firstName,\n          lastName: this.state.lastName\n        },\n        observation: {\n          date: Date(this.state.date),\n          location: this.state.selectedBeach,\n          moonPhase: 'First Quarter',\n          tide: 'low-to-high',\n          comments: this.state.comments\n        },\n        turtle: {\n          condition: {\n            status: this.state.conditionstat,\n            stage: this.state.conditionstage\n          },\n          dimensions: {\n            plain: {\n              length: this.state.dimensionsPl,\n              width: this.state.dimensionsPw\n            },\n            curve: {\n              length: this.state.dimensionsCl,\n              width: this.state.dimensionsCw\n            }\n          },\n          markings: {\n            rightSide: this.state.markingsRs,\n            leftSide: this.state.markingsLs\n          },\n          hasData: this.state.hasTurtle,\n          species: this.state.species,\n          gender: this.state.gender\n        },\n        nest: {\n          hasData: this.state.hasNest,\n          layTime: this.state.daten,\n          eggCount: this.state.eggCount,\n          hatchEst: this.state.daten,\n          rehomed: this.state.rehomed,\n          salvageable: this.state.salvageable\n        }\n      };\n      console.log(form);\n\n      if (navigator.onLine) {\n        await axios.post('http://localhost:7777/mega-form', form);\n        console.log('new form saved!');\n      } else {\n        let formArray = [];\n        formArray[0] = prompt('You are offline. Save this form for later?');\n        localStorage.setItem('formArray', JSON.stringify({\n          form\n        }));\n      }\n    };\n\n    this.handleExpandClick = event => {\n      // console.log(event.target)\n      let showFpart = true; // showFpart = !showFpart\n\n      console.log(showFpart);\n      this.setState({\n        showFpart: showFpart\n      });\n    };\n\n    this.state = {\n      locationLatitude: \"\",\n      // set-up by beach selection\n      locationLongitude: \"\",\n      // set-up by beach selection\n      selectedBeach: \"\",\n      firstName: null,\n      lastName: null,\n      date: null,\n      time: \"\",\n      species: null,\n      gender: null,\n      conditionstat: null,\n      conditionstage: null,\n      dimensionsPl: null,\n      dimensionsPw: null,\n      dimensionsCl: null,\n      dimensionsCw: null,\n      markingsRs: null,\n      markingsLs: null,\n      comments: \"\",\n      showNest: null,\n      showFpart: false,\n      hasTurtle: null,\n      hasNest: null,\n      eggCount: null,\n      layTime: null,\n      hatchEst: null,\n      rehomed: null,\n      salvageable: null,\n      daten: null,\n      timen: null\n    };\n  }\n\n  render() {\n    const t = this.props.t;\n\n    if (!this.props.isLoggedIn()) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      id: \"formContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, t('TORTUGA WATCH FORM')), React.createElement(\"div\", {\n      id: \"beachButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(BeachLocations, {\n      handleBeachInput: this.handleBeachInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }), React.createElement(ExpansionPanel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(ExpansionPanelSummary, {\n      expandIcon: React.createElement(ExpandMoreIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }),\n      \"aria-controls\": \"panel1c-content\",\n      id: \"shift\" // style={{border: '10px'}}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"helptext\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: \"Shift\",\n      variant: \"h6\",\n      component: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, t('Shift')))), React.createElement(ShiftInput, {\n      forms: this.state.forms,\n      handleName: this.handleName,\n      handleDate: this.handleDate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280\n      },\n      __self: this\n    })), React.createElement(ExpansionPanel, {\n      TransitionProps: {\n        unmountOnExit: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(ExpansionPanelSummary, {\n      expandIcon: React.createElement(ExpandMoreIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }),\n      \"aria-controls\": \"panel1c-content\",\n      id: \"turtles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"helptext\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: \"turtles\",\n      variant: \"h6\",\n      component: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289\n      },\n      __self: this\n    }, t('Turtle Information')))), React.createElement(Turtle, {\n      handleGender: this.handleGender,\n      handleCondition: this.handleCondition,\n      handleSpecies: this.handleSpecies,\n      forms: this.state.forms,\n      handleTurtInput: this.state.handleTurtInput,\n      handleDimentions: this.handleDimentions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    })), React.createElement(ExpansionPanel, {\n      TransitionProps: {\n        unmountOnExit: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295\n      },\n      __self: this\n    }, React.createElement(ExpansionPanelSummary, {\n      expandIcon: React.createElement(ExpandMoreIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }),\n      \"aria-controls\": \"panel1c-content\",\n      id: \"turtles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"helptext\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      className: \"nests\",\n      variant: \"h6\",\n      component: \"h6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, t('Nest Information')))), React.createElement(NestInput, {\n      forms: this.state.forms,\n      handleNest: this.handleNest,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    })), React.createElement(Comments, {\n      handleComments: this.handleComments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      style: {\n        backgroundColor: '#09bc8a',\n        opacity: 0.9,\n        marginLeft: '0.2em',\n        marginTop: '0.1em'\n      },\n      size: \"medium\",\n      className: \"submit\" // startIcon={<SaveIcon />}\n      ,\n      color: \"#bce784\",\n      onClick: this.submitNewForm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, t('Submit Form')));\n  }\n\n}\n\nexport default withTranslation('translation')(Form);","map":{"version":3,"sources":["C:/Users/benja/Desktop/Fullstack Bootcamp/projects/Tortuga Pedasi/tortugaspedasi/tortugaspedasi/src/Components/Form/Form.js"],"names":["React","Component","ShiftInput","Turtle","NestInput","Button","withTranslation","Typography","ExpansionPanel","ExpansionPanelSummary","ExpandMoreIcon","BeachLocations","Comments","Redirect","green","axios","require","Form","constructor","props","handleBeachInput","input","console","log","locationLatitude","state","locationLongitude","selectedBeach","setState","handleSpecies","species","handleCondition","conditionstage","conditionstat","charAt","handleName","first","last","firstName","lastName","localStorage","setItem","handleDimentions","id","value","key","handleDate","date","time","handleShift","handleNest","eggCount","layTime","hatchEst","rehomed","salvageable","daten","timen","handleLab","checkTurtleData","hasTurtle","turtle","gender","dimensionsPl","dimensionsPw","dimensionsCl","dimensionsCw","markingsRs","markingsLs","Object","keys","some","k","checkNest","hasNest","nest","handleGender","handleComments","comments","submitNewForm","shift","observation","form","Date","location","moonPhase","tide","condition","status","stage","dimensions","plain","length","width","curve","markings","rightSide","leftSide","hasData","navigator","onLine","post","formArray","prompt","JSON","stringify","handleExpandClick","event","showFpart","showNest","render","t","isLoggedIn","forms","unmountOnExit","handleTurtInput","backgroundColor","opacity","marginLeft","marginTop"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ShiftInput from './ShiftInput';\r\nimport Turtle from './Turtle';\r\nimport NestInput from './NestInput';\r\nimport Button from '@material-ui/core/Button';\r\nimport './form.css';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { Typography } from '@material-ui/core';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport BeachLocations from './BeachLocations';\r\nimport Comments from './ObservationComments';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { green } from '@material-ui/core/colors'\r\n\r\nconst axios = require('axios');\r\n\r\nclass Form extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            locationLatitude: \"\",  // set-up by beach selection\r\n            locationLongitude: \"\", // set-up by beach selection\r\n            selectedBeach: \"\",\r\n            firstName: null,\r\n            lastName: null,\r\n            date: null,\r\n            time: \"\",\r\n            species: null,\r\n            gender: null,\r\n            conditionstat: null,\r\n            conditionstage: null,\r\n            dimensionsPl: null,\r\n            dimensionsPw: null,\r\n            dimensionsCl: null,\r\n            dimensionsCw: null,\r\n            markingsRs: null,\r\n            markingsLs: null,\r\n            comments: \"\",\r\n            showNest: null,\r\n            showFpart: false,\r\n            hasTurtle: null,\r\n            hasNest: null,\r\n            eggCount: null,\r\n            layTime: null,\r\n            hatchEst: null,\r\n            rehomed: null,\r\n            salvageable: null,\r\n            daten: null,\r\n            timen: null,\r\n        }\r\n    }\r\n\r\n    handleBeachInput = async (input) => {\r\n        console.log(input)\r\n        let locationLatitude = { ...this.state.locationLatitude }\r\n        let locationLongitude = { ...this.state.locationLongitude }\r\n        let selectedBeach = { ...this.state.selectedBeach }\r\n        locationLatitude = input.locationLatitude\r\n        locationLongitude = input.locationLongitude\r\n        selectedBeach = input.selectedBeach\r\n        await this.setState({ locationLatitude, locationLongitude, selectedBeach })\r\n    }\r\n    handleSpecies = async (input) => {\r\n        let species = { ...this.state.species }\r\n        species = input\r\n        await this.setState({ species })\r\n    }\r\n    handleCondition = async (input) => {\r\n        let conditionstage = { ...this.state.conditionstage }\r\n        let conditionstat = { ...this.state.conditionstat }\r\n        conditionstage = input\r\n        console.log(conditionstage, input)\r\n        conditionstat = (input.charAt(0) == \"a\") ? 'Alive' : 'Death'\r\n        await this.setState({ conditionstage, conditionstat })\r\n    }\r\n    handleName = async (first, last) => {\r\n        let firstName = { ...this.state.firstName }\r\n        let lastName = { ...this.state.lastName }\r\n        firstName = first\r\n        lastName = last\r\n        await this.setState({ firstName, lastName })\r\n        localStorage.setItem('firstName', this.state.firstName)\r\n        localStorage.setItem('lastName', this.state.lastName)\r\n    }\r\n\r\n    handleDimentions = async (id, value) => {\r\n        console.log(id, value)\r\n        let key = id\r\n\r\n        // let index = Object.keys(key)[0]\r\n        // console.log(index)\r\n        // let propert = { ...this.state[index]}\r\n        // let value = Object.values(key)[0]\r\n        // console.log(state)\r\n        // propert = value\r\n        await this.setState({ [key]: value })\r\n        // console.log(state)\r\n    }\r\n\r\n    handleDate = async (first, last) => {\r\n        let date = { ...this.state.date }\r\n        let time = { ...this.state.time }\r\n        date = first\r\n        time = last\r\n        await this.setState({ date, time })\r\n    }\r\n    handleShift = async (input) => {\r\n        let firstName = { ...this.state.firstName }\r\n        let lastName = { ...this.state.lastName }\r\n        let date = { ...this.state.date }\r\n        let time = { ...this.state.time }\r\n        firstName = input.firstName\r\n        lastName = input.lastName\r\n        date = input.date\r\n        time = input.time\r\n        await this.setState({ firstName, lastName, date, time })\r\n    }\r\n    handleNest = async (input) => {\r\n        console.log(input)\r\n        let eggCount = { ...this.state.eggCount }\r\n        let layTime = { ...this.state.layTime }\r\n        let hatchEst = { ...this.state.hatchEst }\r\n        let rehomed = { ...this.state.rehomed }\r\n        let salvageable = { ...this.state.salvageable }\r\n        let daten = { ...this.state.daten }\r\n        let timen = { ...this.state.timen }\r\n        eggCount = input.eggCount\r\n        layTime = input.layTime\r\n        hatchEst = input.hatchEst\r\n        rehomed = input.rehomed\r\n        salvageable = input.salvageable\r\n        daten = input.daten\r\n        timen = input.timen\r\n        await this.setState({ eggCount, layTime, hatchEst, rehomed, salvageable, daten, timen })\r\n    }\r\n    handleLab = (input) => {\r\n        let salvageable = { ...this.state.salvageable }\r\n        salvageable = input.salvageable\r\n        this.setState({ salvageable })\r\n    }\r\n\r\n    checkTurtleData = () => {\r\n        let hasTurtle = {...this.state.hasTurtle}\r\n        let turtle = {\r\n            species: this.state.species, gender: this.state.gender,\r\n            conditionstat: this.state.conditionstat,\r\n            conditionstage: this.state.conditionstage,\r\n            dimensionsPl: this.state.dimensionsPl,\r\n            dimensionsPw: this.state.dimensionsPw,\r\n            dimensionsCl: this.state.dimensionsCl,\r\n            dimensionsCw: this.state.dimensionsCw,\r\n            markingsRs: this.state.markingsRs,\r\n            markingsLs: this.state.markingsLs,\r\n        }\r\n        \r\n        hasTurtle = Object.keys(turtle).some(function (k) {\r\n            return turtle[k] !== null\r\n        })\r\n        // console.log(hasTurtle)\r\n        // hasTurtle = formInput.turtleInput.some(exist)\r\n        \r\n        this.setState({\r\n            hasTurtle\r\n        })\r\n    }\r\n    checkNest = () => {\r\n        let hasNest = {...this.state.hasNest}\r\n        let nest = {\r\n            eggCount: this.state.eggCount,\r\n            layTime: this.state.layTime,\r\n            hatchEst: this.state.hatchEst,\r\n            rehomed: this.state.rehomed,\r\n            salvageable: this.state.salvageable,\r\n            layTime: this.state.daten,\r\n        }\r\n\r\n        hasNest = Object.keys(nest).some(function (k) {\r\n            return nest[k] !== null\r\n        })\r\n        // console.log(hasTurtle)\r\n        // hasTurtle = formInput.turtleInput.some(exist)\r\n\r\n        this.setState({\r\n            hasNest\r\n        })\r\n    }\r\n\r\n    handleGender = (input) => {\r\n        let gender = { ...this.state.gender }\r\n        gender = input\r\n        this.setState({\r\n            gender\r\n        })\r\n    }\r\n\r\n    handleComments = (input) => {\r\n        let comments = { ...this.state.comments }\r\n        comments = input\r\n        this.setState({\r\n            comments\r\n        })\r\n    }\r\n\r\n    submitNewForm = async (shift, observation, turtle, nest) => {\r\n        await this.checkTurtleData()\r\n        await this.checkNest()\r\n\r\n        let form = {\r\n            shift: { firstName: this.state.firstName, lastName: this.state.lastName },\r\n            observation:\r\n             { date: Date(this.state.date),\r\n               location: this.state.selectedBeach,\r\n               moonPhase: 'First Quarter',\r\n               tide: 'low-to-high',\r\n               comments: this.state.comments },\r\n            turtle:\r\n             { condition: { status: this.state.conditionstat , stage: this.state.conditionstage },\r\n               dimensions: { plain: {length: this.state.dimensionsPl, width: this.state.dimensionsPw}, curve: {length: this.state.dimensionsCl, width: this.state.dimensionsCw} },\r\n               markings: { rightSide: this.state.markingsRs, leftSide: this.state.markingsLs },\r\n               hasData: this.state.hasTurtle,\r\n               species: this.state.species,\r\n               gender: this.state.gender },\r\n            nest:\r\n             { hasData: this.state.hasNest,\r\n               layTime: this.state.daten,\r\n               eggCount: this.state.eggCount,\r\n               hatchEst: this.state.daten,\r\n               rehomed: this.state.rehomed,\r\n               salvageable: this.state.salvageable },\r\n        }\r\n        console.log(form)\r\n        if(navigator.onLine) {\r\n            await axios.post('http://localhost:7777/mega-form',  form )\r\n            console.log('new form saved!')\r\n        }\r\n        else {\r\n            let formArray = []\r\n            formArray[0] = prompt('You are offline. Save this form for later?')\r\n            localStorage.setItem('formArray', JSON.stringify({form}))\r\n        }\r\n        \r\n    }\r\n\r\n    handleExpandClick = (event) => {\r\n        // console.log(event.target)\r\n        let showFpart = true\r\n        // showFpart = !showFpart\r\n        console.log(showFpart)\r\n        this.setState({ showFpart: showFpart })\r\n    };\r\n\r\n    render() {\r\n        const { t } = this.props;\r\n\r\n        if(!this.props.isLoggedIn()){return <Redirect to=\"/\"/>}\r\n\r\n        return (\r\n\r\n            <div id=\"formContainer\" >\r\n                <h1>{t('TORTUGA WATCH FORM')}</h1>\r\n                <div id=\"beachButton\" >\r\n                    <BeachLocations handleBeachInput={this.handleBeachInput} />\r\n                </div>\r\n                <br />\r\n                <ExpansionPanel  >\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1c-content\"\r\n                        id=\"shift\"\r\n                        // style={{border: '10px'}}\r\n                        \r\n                    >\r\n                        <div className=\"helptext\">\r\n                            <Typography className=\"Shift\" variant=\"h6\" component=\"h6\">{t('Shift')}</Typography>\r\n                        </div>\r\n                    </ExpansionPanelSummary>\r\n                    <ShiftInput forms={this.state.forms} handleName={this.handleName} handleDate={this.handleDate} />\r\n                    <br />\r\n                </ExpansionPanel>\r\n                <ExpansionPanel TransitionProps={{ unmountOnExit: true }}>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1c-content\"\r\n                        id=\"turtles\"\r\n                    >\r\n                        <div className=\"helptext\">\r\n                            <Typography className=\"turtles\" variant=\"h6\" component=\"h6\">{t('Turtle Information')}</Typography>\r\n                        </div>\r\n                    </ExpansionPanelSummary>\r\n                    <Turtle handleGender={this.handleGender} handleCondition={this.handleCondition} handleSpecies={this.handleSpecies} forms={this.state.forms} handleTurtInput={this.state.handleTurtInput}\r\n                        handleDimentions={this.handleDimentions} />\r\n                </ExpansionPanel>\r\n                <ExpansionPanel TransitionProps={{ unmountOnExit: true }}>\r\n                    <ExpansionPanelSummary\r\n                        expandIcon={<ExpandMoreIcon />}\r\n                        aria-controls=\"panel1c-content\"\r\n                        id=\"turtles\"\r\n                    >\r\n                        <div className=\"helptext\">\r\n                            <Typography className=\"nests\" variant=\"h6\" component=\"h6\">{t('Nest Information')}</Typography>\r\n                        </div>\r\n                    </ExpansionPanelSummary>\r\n                    <NestInput forms={this.state.forms} handleNest={this.handleNest} />\r\n                </ExpansionPanel>\r\n                <Comments handleComments={this.handleComments}  />\r\n                <Button\r\n                    variant=\"contained\"\r\n                    style={{backgroundColor: '#09bc8a', opacity: 0.9, marginLeft: '0.2em', marginTop: '0.1em'}}\r\n                    size=\"medium\"\r\n                    className=\"submit\"\r\n                    // startIcon={<SaveIcon />}\r\n                    color=\"#bce784\"\r\n                    onClick={this.submitNewForm}\r\n                >\r\n                    {t('Submit Form')}\r\n                </Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default withTranslation('translation')(Form);"]},"metadata":{},"sourceType":"module"}